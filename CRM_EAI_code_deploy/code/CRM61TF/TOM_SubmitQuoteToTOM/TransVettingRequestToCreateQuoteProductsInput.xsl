<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="EAI.MSG.TOM.TF.153_VettingRequest.xsd"/>
      <rootElement name="vettingRequest" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/TOM/TechFul"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="http://ukcq-eai04:7777/orabpel/xmllib/WSDL_Cache/SM7/TOM.wsdl"/>
      <rootElement name="CreateQuoteProductsRequest" namespace="http://schemas.hp.com/SM/7"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [WED OCT 22 16:56:49 GMT+05:30 2008]. -->
?>
<xsl:stylesheet version="1.0" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:cmn="http://schemas.hp.com/SM/7/Common" xmlns:cmt="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns3="http://www.reuters.com/ns/2007/09/01/GCAP/CommonUserTypes" xmlns:ns0="http://schemas.hp.com/SM/7" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://www.reuters.com/ns/2007/09/01/GCAP/NillableUserTypes" xmlns:cqt="http://www.reuters.com/ns/2007/09/01/GCAP/CommonQuoteTypes" xmlns:xsdLocal="http://www.reuters.com/ns/2007/09/01/GCAP/TOM/TechFul" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:gcap-sa="http://www.reuters.com/ns/2007/09/01/GCAP/SchemaAnnotations" xmlns:ns1="http://www.reuters.com/ns/2007/09/01/GCAP/CommonAccountTypes" exclude-result-prefixes="xsl cmt ns3 xsd ns2 cqt xsdLocal gcap-sa ns1 mime cmn ns0 http soap xsi bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
  <xsl:template match="/">
    <ns0:CreateQuoteProductsRequest>
      <ns0:model>
        <ns0:keys>
          <xsl:attribute name="query">
            <xsl:value-of select="string(&quot;&quot;)"/>
          </xsl:attribute>
        </ns0:keys>
        <ns0:instance>
          <ns0:CRMQuoteNumber>
            <xsl:value-of select="/xsdLocal:vettingRequest/xsdLocal:quoteHeader/cqt:quoteNumber"/>
          </ns0:CRMQuoteNumber>
          <ns0:CRMQuoteRevision>
            <xsl:value-of select="/xsdLocal:vettingRequest/xsdLocal:quoteHeader/cqt:revisionNumber"/>
          </ns0:CRMQuoteRevision>
          <ns0:product.structure>
            <xsl:for-each select="/xsdLocal:vettingRequest/xsdLocal:orderLineItem">
              <ns0:product.structure>
                <ns0:product.line.id>
                  <xsl:value-of select="cqt:productLineId"/>
                </ns0:product.line.id>
                <ns0:product.id>
                  <xsl:value-of select="cqt:productId"/>
                </ns0:product.id>
                <ns0:product.name>
                  <xsl:value-of select="cqt:productName"/>
                </ns0:product.name>
                <ns0:product.qty>
                  <xsl:value-of select="cqt:quantity"/>
                </ns0:product.qty>
                <ns0:product.pli>
                  <xsl:value-of select="cqt:priceListItem"/>
                </ns0:product.pli>
                <ns0:product.action>
                  <xsl:value-of select="cqt:action"/>
                </ns0:product.action>
                <ns0:product.billing.id>
                  <xsl:value-of select="cqt:productBillingId"/>
                </ns0:product.billing.id>
                <ns0:product.alt.billing.id>
                  <xsl:value-of select="cqt:altBillingId"/>
                </ns0:product.alt.billing.id>
                <ns0:product.subscriber.id>
                  <xsl:value-of select="cqt:subscriberID"/>
                </ns0:product.subscriber.id>
                <xsl:choose>
                  <xsl:when test="cqt:productInstallDate != &quot;&quot;">
                    <ns0:product.install.date>
                      <xsl:value-of select="xp20:format-dateTime(cqt:productInstallDate,&quot;[D01]/[M01]/[Y01] [H01]:[m01]:[s01]&quot;)"/>
                    </ns0:product.install.date>
                  </xsl:when>
                  <xsl:otherwise>
                    <ns0:product.install.date>
                      <xsl:value-of select="cqt:productInstallDate"/>
                    </ns0:product.install.date>
                  </xsl:otherwise>
                </xsl:choose>
                <ns0:product.asset.integ.id>
                  <xsl:value-of select="cqt:assetIntegrationId"/>
                </ns0:product.asset.integ.id>
                <ns0:product.freetrial.duration>
                  <xsl:value-of select="cqt:freeTrialDuration"/>
                </ns0:product.freetrial.duration>
                <ns0:product.parent.line.id>
                  <xsl:value-of select="cqt:parentQuoteLineId"/>
                </ns0:product.parent.line.id>
                <xsl:choose>
                  <xsl:when test="cqt:technicalApprovalRequired = &quot;Y&quot;">
                    <ns0:product.techapproval.req>
                      <xsl:value-of select="string(&quot;true&quot;)"/>
                    </ns0:product.techapproval.req>
                  </xsl:when>
                  <xsl:when test="cqt:technicalApprovalRequired = &quot;&quot;">
                    <ns0:product.techapproval.req/>
                  </xsl:when>
                  <xsl:when test="cqt:technicalApprovalRequired = &quot;N&quot;">
                    <ns0:product.techapproval.req>
                      <xsl:value-of select="string(&quot;false&quot;)"/>
                    </ns0:product.techapproval.req>
                  </xsl:when>
                  <xsl:otherwise>
                    <ns0:product.techapproval.req>
                      <xsl:value-of select="cqt:technicalApprovalRequired"/>
                    </ns0:product.techapproval.req>
                  </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                  <xsl:when test="cqt:technicalFulfilmentRequired = &quot;Y&quot;">
                    <ns0:product.techffmt.req>
                      <xsl:value-of select="string(&quot;true&quot;)"/>
                    </ns0:product.techffmt.req>
                  </xsl:when>
                  <xsl:when test="cqt:technicalFulfilmentRequired = &quot;N&quot;">
                    <ns0:product.techffmt.req>
                      <xsl:value-of select="string(&quot;false&quot;)"/>
                    </ns0:product.techffmt.req>
                  </xsl:when>
                  <xsl:when test="cqt:technicalFulfilmentRequired = &quot;&quot;">
                    <ns0:product.techffmt.req/>
                  </xsl:when>
                  <xsl:otherwise>
                    <ns0:product.techffmt.req>
                      <xsl:value-of select="cqt:technicalFulfilmentRequired"/>
                    </ns0:product.techffmt.req>
                  </xsl:otherwise>
                </xsl:choose>
              </ns0:product.structure>
            </xsl:for-each>
          </ns0:product.structure>
          <ns0:Location>
            <xsl:value-of select="/xsdLocal:vettingRequest/xsdLocal:quoteHeader/cqt:locationID"/>
          </ns0:Location>
        </ns0:instance>
      </ns0:model>
    </ns0:CreateQuoteProductsRequest>
  </xsl:template>
</xsl:stylesheet>
