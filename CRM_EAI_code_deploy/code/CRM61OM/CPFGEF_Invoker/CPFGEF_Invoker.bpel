<?xml version = '1.0' encoding = 'UTF-8'?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Nov 26 12:09:31 GMT+05:30 2009
  Author:  GK61400
  Purpose: Empty BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="CPFGEF_Invoker" targetNamespace="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CPFG/ElectronicFulfilmentServices/CPFGEF_Invoker" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:ns4="http://www.reuters.com/ns/2007/01/25/GCAP/EAI/OrderManagement" xmlns:ns24="http://www.reuters.com/ns/2007/09/01/GCAP/external/CEP/ElectronicFulfilmentServices" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns16="http://xmlns.oracle.com/pcbpel/adapter/db/UpdateINTERFACE_BUFFER/" xmlns:ns5="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ns9="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CPFG/ElectronicFulfilmentServices" xmlns:ns17="http://xmlns.oracle.com/pcbpel/adapter/db/top/UpdateINTERFACEBUFFER" xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/CPFGEF_POLLING_V/" xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/top/CPFGEFPOLLINGV" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns15="http://www.reuters.com/ns/2007/09/01/GCAP/UTL/Sequencer" xmlns:ns10="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CPFG/ElectronicFulfilmentServices/CPFGEF_PropagateFulfillmentStatus" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns20="http://xmlns.oracle.com/pcbpel/adapter/db/UpdateINTERFACE_BUFFERONERROR/" xmlns:ns13="http://www.reuters.com/ns/2008/05/16/AAA/ESB/SBO/GCAP/CommonMessageTypes" xmlns:ns7="http://www.reuters.com/ns/2008/05/16/AAA/ESB/SBO/GCAP/ElectronicFulfilmentServices/PA" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns12="http://www.reuters.com/ns/2008/05/16/AAA/ESB/SBO/GCAP/Common" xmlns:ns23="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/OM" xmlns:ns18="http://xmlns.oracle.com/InterfaceManager" xmlns:client="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CPFG/ElectronicFulfilmentServices/CPFGEF_Invoker" xmlns:ns6="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CPFG/ElectronicFulfilmentServices/Exception" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ns22="http://www.reuters.com/NS/2007/01/25/GCAP/EAI/OrderManagement/CCRM" xmlns:ns11="http://www.reuters.com/ns/2007/09/01/GCAP/eai/cpfg" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:ns19="http://xmlns.oracle.com/pcbpel/adapter/db/top/InterfaceConfig" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:ns3="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CPFG/OrderFulfilmentCrossRefService" xmlns:ns14="http://www.reuters.com/ns/2007/01/25/GCAP/EAI/UTL/Sequencer" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ns21="http://www.reuters.com/ns/2007/01/25/GCAP/EAI/CCRM/OM" xmlns:ns8="http://www.reuters.com/ns/2008/05/16/AAA/ESB/SBO/GCAP/ElectronicFulfilmentServices" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <partnerLinks>
    <partnerLink name="Exp_ElectronicFulfilmentInterface_PA_ElectronicFulfilmentInterfaceHttp_Service" partnerRole="ElectronicFulfilmentInterface_Role" partnerLinkType="ns7:ElectronicFulfilmentInterface_PL"/>
    <partnerLink myRole="CPFGEF_POLLING_V_role" name="CPFGEF_POLLING_V" partnerLinkType="ns1:CPFGEF_POLLING_V_plt"/>
    <partnerLink name="InterfaceManager" partnerRole="InterfaceManagerProvider" partnerLinkType="ns18:InterfaceManager"/>
    <partnerLink name="CPFG_StatusUpdateValidator" partnerRole="CPFG_StatusUpdateValidatorProvider" partnerLinkType="ns11:CPFG_StatusUpdateValidator"/>
    <partnerLink name="UpdateINTERFACE_BUFFER" partnerRole="UpdateINTERFACE_BUFFER_role" partnerLinkType="ns16:UpdateINTERFACE_BUFFER_plt"/>
  </partnerLinks>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <variable name="nReceived" type="xsd:int"/>
    <variable name="nProcessed" type="xsd:int"/>
    <variable name="nError" type="xsd:int"/>
    <variable name="errorMsg" type="xsd:string"/>
    <variable name="nSent" type="xsd:int"/>
    <variable name="nFailure" type="xsd:int"/>
    <variable name="index" type="xsd:int"/>
    <variable name="SuccessResponse" type="xsd:string"/>
    <variable name="rawMessage" type="xsd:string"/>
    <variable name="parsedRawMessage" type="xsd:string"/>
    <variable name="javaException" type="xsd:string"/>
    <variable name="CountElectronicFulfilmentRequests" type="xsd:nonNegativeInteger"/>
    <variable name="InvCPFGEFElectronicFulfilmentServiceEndpoint_fulfill_InputVariable" messageType="ns8:ElectronicFulfilmentRequest"/>
    <variable name="InvCPFGEFElectronicFulfilmentServiceEndpoint_fulfill_OutputVariable" messageType="ns8:BasicResponse"/>
    <variable name="runtimeFault" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="RcvOrderRequest_receive_InputVariable" messageType="ns1:CpfgefPollingVCollection_msg"/>
    <variable name="id" type="xsd:string"/>
    <variable name="created" type="xsd:string"/>
    <variable name="interfaceId" type="xsd:string"/>
    <variable name="referenceId" type="xsd:string"/>
    <variable name="state" type="xsd:string"/>
    <variable name="RequestHealthCheckIV" messageType="ns18:InterfaceManagerRequestMessage"/>
    <variable name="RequestHealthCheckOV" messageType="ns18:InterfaceManagerResponseMessage"/>
    <variable name="cpfgRemoteFaultVar" messageType="bpelx:RuntimeFaultMessage"/>
    <variable name="standaloneElectronicFulfilmentRequest" element="ns9:standaloneElectronicFulfilmentRequest"/>
    <variable name="InvCPfGStatusUpdateValidatorIV" messageType="ns11:CPFG_StatusUpdateValidatorRequestMessage"/>
    <variable name="InvCPfGStatusUpdateValidatorOV" messageType="ns11:CPFG_StatusUpdateValidatorResponseMessage"/>
    <variable name="InvUpdateINTERFACE_BUFFERIV" messageType="ns16:InterfaceBufferCollection_msg"/>
  </variables>
  <faultHandlers>
    <catchAll>
      <bpelx:exec name="AsgCustomFaultTitle" language="java" version="1.3">
        <![CDATA[setCompositeInstanceTitle( getTitle() + ";Fault");]]>
      </bpelx:exec>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">
    <receive name="RcvFulfilmentRequests" partnerLink="CPFGEF_POLLING_V" portType="ns1:CPFGEF_POLLING_V_ptt" operation="receive" variable="RcvOrderRequest_receive_InputVariable" createInstance="yes"/>
    <assign name="AsgInitVariables">
      <copy>
        <from expression="count(bpws:getVariableData('RcvOrderRequest_receive_InputVariable','CpfgefPollingVCollection','/ns2:CpfgefPollingVCollection/ns2:CpfgefPollingV'))"/>
        <to variable="nReceived"/>
      </copy>
      <copy>
        <from expression="dvm:lookupValue('oramds:/apps/EAIMetaData/dvm/CRMAppReference.dvm','Reference','SuccessCode','Value', '0')"/>
        <to variable="SuccessResponse"/>
      </copy>
      <copy>
        <from expression="0"/>
        <to variable="nProcessed"/>
      </copy>
      <copy>
        <from expression="0"/>
        <to variable="nError"/>
      </copy>
      <copy>
        <from expression="0"/>
        <to variable="nFailure"/>
      </copy>
      <copy>
        <from expression="1"/>
        <to variable="index"/>
      </copy>
      <copy>
        <from expression="0"/>
        <to variable="nSent"/>
      </copy>
      <copy>
        <from expression="''"/>
        <to variable="errorMsg"/>
      </copy>
    </assign>
    <bpelx:exec name="SetInitialTitle" language="java" version="1.3">
      <![CDATA[// Set the title    
setCompositeInstanceTitle("Processing " + getVariableData("nReceived") + " messages"); 
checkpoint();]]>
    </bpelx:exec>
    <while name="While_1" condition="bpws:getVariableData('nProcessed')&lt;bpws:getVariableData('nReceived')">
      <sequence name="Sequence_1">
        <assign name="AsgPayloadToString">
          <copy>
            <from variable="RcvOrderRequest_receive_InputVariable" part="CpfgefPollingVCollection" query="/ns2:CpfgefPollingVCollection/ns2:CpfgefPollingV[bpws:getVariableData('nProcessed')+1]/ns2:payload"/>
            <to variable="rawMessage"/>
          </copy>
          <copy>
            <from variable="RcvOrderRequest_receive_InputVariable" part="CpfgefPollingVCollection" query="/ns2:CpfgefPollingVCollection/ns2:CpfgefPollingV[bpws:getVariableData('nProcessed') + 1]/ns2:id"/>
            <to variable="id"/>
          </copy>
          <copy>
            <from variable="RcvOrderRequest_receive_InputVariable" part="CpfgefPollingVCollection" query="/ns2:CpfgefPollingVCollection/ns2:CpfgefPollingV[bpws:getVariableData('nProcessed') + 1]/ns2:created"/>
            <to variable="created"/>
          </copy>
          <copy>
            <from variable="RcvOrderRequest_receive_InputVariable" part="CpfgefPollingVCollection" query="/ns2:CpfgefPollingVCollection/ns2:CpfgefPollingV[bpws:getVariableData('nProcessed') + 1]/ns2:interfaceId"/>
            <to variable="interfaceId"/>
          </copy>
          <copy>
            <from variable="RcvOrderRequest_receive_InputVariable" part="CpfgefPollingVCollection" query="/ns2:CpfgefPollingVCollection/ns2:CpfgefPollingV[bpws:getVariableData('nProcessed') + 1]/ns2:referenceId"/>
            <to variable="referenceId"/>
          </copy>
          <copy>
            <from expression="bpws:getVariableData('nProcessed')+1"/>
            <to variable="nProcessed"/>
          </copy>
        </assign>
        <bpelx:exec name="ReplaceUnsafeCharactersInRawMessage" language="java" version="1.3">
          <![CDATA[try {                             
    setVariableData("parsedRawMessage", ((String)getVariableData("rawMessage")).replaceAll("&", "&amp;") );       
    } catch (Exception e) {                          
        setVariableData("javaException", e.getMessage() );                   
    }]]>
        </bpelx:exec>
        <switch name="SwitchJavaException">
          <case condition="bpws:getVariableData('javaException')!=''">
            <bpelx:annotation>
              <bpelx:pattern>Java Exception</bpelx:pattern>
            </bpelx:annotation>
            <sequence name="Sequence_2">
              <assign name="AsgERRORAndIncrementFailed">
                <copy>
                  <from expression="bpws:getVariableData('nFailure')+1"/>
                  <to variable="nFailure"/>
                </copy>
                <copy>
                  <from expression="'E'"/>
                  <to variable="state"/>
                </copy>
              </assign>
              <assign name="AsgUpdateValues">
                <copy>
                  <from variable="id"/>
                  <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:id"/>
                </copy>
                <copy>
                  <from variable="created"/>
                  <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:created"/>
                </copy>
                <copy>
                  <from variable="rawMessage"/>
                  <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:payload"/>
                </copy>
                <copy>
                  <from variable="interfaceId"/>
                  <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:interfaceId"/>
                </copy>
                <copy>
                  <from variable="referenceId"/>
                  <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:referenceId"/>
                </copy>
                <copy>
                  <from variable="state"/>
                  <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:state"/>
                </copy>
                <copy>
                  <from expression="ora:getCompositeInstanceId()"/>
                  <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:updatedBy"/>
                </copy>
                <bpelx:remove>
                  <bpelx:target variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:lastUpdated"/>
                </bpelx:remove>
                <bpelx:remove>
                  <bpelx:target variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:sendAttempts"/>
                </bpelx:remove>
              </assign>
            </sequence>
          </case>
          <otherwise>
            <sequence name="Sequence_11">
              <assign name="AssignFulfilmentRequestToSend">
                <copy>
                  <from expression="ora:parseEscapedXML(bpws:getVariableData('parsedRawMessage'))"/>
                  <to variable="standaloneElectronicFulfilmentRequest"/>
                </copy>
              </assign>
              <scope name="ScpCrossRefService">
                <faultHandlers>
                  <catchAll>
                    <sequence name="Sequence_12">
                      <assign name="AsgErrorMsg">
                        <copy>
                          <from expression="substring(substring-after(substring-before(ora:getFaultAsString(),'&lt;/summary>'),'&lt;summary>'),0,1999)"/>
                          <to variable="errorMsg"/>
                        </copy>
                      </assign>
                      <terminate name="Terminate"/>
                    </sequence>
                  </catchAll>
                </faultHandlers>
                <sequence name="SeqCrossRefService">
                  <assign name="TransStandaloneFulfilmentRequestToCPfGFulfilmentRequest">
                    <bpelx:annotation>
                      <bpelx:pattern>transformation</bpelx:pattern>
                    </bpelx:annotation>
                    <copy>
                      <from expression="ora:processXSLT('TransStandaloneFulfilmentRequestToCPfGFulfilmentRequest.xsl',bpws:getVariableData('standaloneElectronicFulfilmentRequest'))"/>
                      <to variable="InvCPFGEFElectronicFulfilmentServiceEndpoint_fulfill_InputVariable" part="parameter"/>
                    </copy>
                  </assign>
                  <scope name="SeqInvElectronicFulfilment">
                    <sequence name="Sequence_4">
                      <scope name="Scope_1">
                        <faultHandlers>
                          <catch faultName="bpelx:remoteFault" faultVariable="cpfgRemoteFaultVar">
                            <sequence name="Sequence_17">
                              <switch name="Switch_1">
                                <case condition="bpws:getVariableData('cpfgRemoteFaultVar','code') != ''">
                                  <bpelx:annotation>
                                    <bpelx:pattern>AAA responded</bpelx:pattern>
                                  </bpelx:annotation>
                                  <sequence name="Sequence_19">
                                    <assign name="IncrementFailed">
                                      <copy>
                                        <from expression="bpws:getVariableData('nFailure') + 1"/>
                                        <to variable="nFailure"/>
                                      </copy>
                                    </assign>
                                    <assign name="AsgState-ERROR">
                                      <copy>
                                        <from expression="'E'"/>
                                        <to variable="state"/>
                                      </copy>
                                      <copy>
                                        <from expression="substring(substring-after(substring-before(ora:getFaultAsString(),'&lt;/summary>'),'&lt;summary>'),0,1999)"/>
                                        <to variable="errorMsg"/>
                                      </copy>
                                    </assign>
                                  </sequence>
                                </case>
                                <otherwise>
                                  <sequence name="Sequence_18">
                                    <assign name="IncrementFailed">
                                      <copy>
                                        <from expression="bpws:getVariableData('nFailure')+1"/>
                                        <to variable="nFailure"/>
                                      </copy>
                                    </assign>
                                    <assign name="AsgState-RETRYABLE">
                                      <copy>
                                        <from expression="'R'"/>
                                        <to variable="state"/>
                                      </copy>
                                      <copy>
                                        <from expression="substring(substring-after(substring-before(ora:getFaultAsString(),'&lt;/summary>'),'&lt;summary>'),0,1999)"/>
                                        <to variable="errorMsg"/>
                                      </copy>
                                    </assign>
                                  </sequence>
                                </otherwise>
                              </switch>
                            </sequence>
                          </catch>
                          <catchAll>
                            <sequence name="Sequence_16">
                              <assign name="IncrementFailed">
                                <copy>
                                  <from expression="bpws:getVariableData('nFailure') + 1"/>
                                  <to variable="nFailure"/>
                                </copy>
                              </assign>
                              <assign name="AsgState-ERROR">
                                <copy>
                                  <from expression="'E'"/>
                                  <to variable="state"/>
                                </copy>
                                <copy>
                                  <from expression="substring(substring-after(substring-before(ora:getFaultAsString(),'&lt;/summary>'),'&lt;summary>'),0,1999)"/>
                                  <to variable="errorMsg"/>
                                </copy>
                              </assign>
                            </sequence>
                          </catchAll>
                        </faultHandlers>
                        <sequence name="Sequence_15">
                          <invoke name="InvCPFGEFElectronicFulfilmentServiceEndpoint" partnerLink="Exp_ElectronicFulfilmentInterface_PA_ElectronicFulfilmentInterfaceHttp_Service" portType="ns8:ElectronicFulfilmentInterface" operation="fulfill" inputVariable="InvCPFGEFElectronicFulfilmentServiceEndpoint_fulfill_InputVariable" outputVariable="InvCPFGEFElectronicFulfilmentServiceEndpoint_fulfill_OutputVariable"/>
                          <switch name="CheckElectronicFulfilmentRequestBasicResponse">
                            <case condition="bpws:getVariableData('InvCPFGEFElectronicFulfilmentServiceEndpoint_fulfill_OutputVariable','parameter','/ns12:basicResponse/ns12:basicResponse/ns13:response') !=bpws:getVariableData('SuccessResponse')">
                              <bpelx:annotation>
                                <bpelx:pattern>Unsuccessful Reponse</bpelx:pattern>
                              </bpelx:annotation>
                              <sequence name="SeqPropateFulfilmentStatus">
                                <scope name="ScpPropagateErrorStatus">
                                  <faultHandlers>
                                    <catch faultName="bpelx:remoteFault" faultVariable="runtimeFault">
                                      <sequence name="Sequence_14">
                                        <assign name="AsgState-ERROR">
                                          <copy>
                                            <from expression="'E'"/>
                                            <to variable="state"/>
                                          </copy>
                                          <copy>
                                            <from expression="substring(substring-after(substring-before(ora:getFaultAsString(),'&lt;/summary>'),'&lt;summary>'),0,1999)"/>
                                            <to variable="errorMsg"/>
                                          </copy>
                                        </assign>
                                      </sequence>
                                    </catch>
                                  </faultHandlers>
                                  <sequence name="SeqPropagateErrorStatus">
                                    <assign name="IncrementError">
                                      <copy>
                                        <from expression="bpws:getVariableData('nError')+1"/>
                                        <to variable="nError"/>
                                      </copy>
                                      <copy>
                                        <from expression="'W'"/>
                                        <to variable="state"/>
                                      </copy>
                                    </assign>
                                    <assign name="TransEFRequestToStatusUpdateValidator">
                                      <bpelx:annotation>
                                        <bpelx:pattern>transformation</bpelx:pattern>
                                      </bpelx:annotation>
                                      <copy>
                                        <from expression="ora:processXSLT('TransEFRequestToStatusUpdateValidator.xsl',bpws:getVariableData('InvCPFGEFElectronicFulfilmentServiceEndpoint_fulfill_OutputVariable','parameter'))"/>
                                        <to part="payload" variable="InvCPfGStatusUpdateValidatorIV"/>
                                      </copy>
                                    </assign>
                                    <assign name="AsgFulfilmentRequestID">
                                      <copy>
                                        <from variable="standaloneElectronicFulfilmentRequest" query="/ns9:standaloneElectronicFulfilmentRequest/ns9:electronicFulfilmentRequestId"/>
                                        <to variable="InvCPfGStatusUpdateValidatorIV" part="payload" query="/ns24:propagateStatusUpdateRequest/ns24:entityID"/>
                                      </copy>
                                    </assign>
                                    <invoke name="InvCPfGStatusUpdateValidator" partnerLink="CPFG_StatusUpdateValidator" portType="ns11:CPFG_StatusUpdateValidator" operation="processOpportunityEvent" inputVariable="InvCPfGStatusUpdateValidatorIV" outputVariable="InvCPfGStatusUpdateValidatorOV"/>
                                  </sequence>
                                </scope>
                              </sequence>
                            </case>
                            <otherwise>
                              <sequence name="Sequence_13">
                                <assign name="IncrementSent">
                                  <copy>
                                    <from expression="bpws:getVariableData('nSent')+1"/>
                                    <to variable="nSent"/>
                                  </copy>
                                  <copy>
                                    <from expression="'C'"/>
                                    <to variable="state"/>
                                  </copy>
                                </assign>
                              </sequence>
                            </otherwise>
                          </switch>
                        </sequence>
                      </scope>
                    </sequence>
                  </scope>
                  <sequence name="SeqUpdateINTERFACEBUFFER">
                    <assign name="TransBlankUpdateMessage">
                      <bpelx:annotation>
                        <bpelx:pattern>transformation</bpelx:pattern>
                      </bpelx:annotation>
                      <copy>
                        <from expression="ora:processXSLT('TransBlankUpdateMessage.xsl',bpws:getVariableData('InvUpdateINTERFACE_BUFFERIV','InterfaceBufferCollection'))"/>
                        <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection"/>
                      </copy>
                    </assign>
                    <assign name="AsgUpdateValues">
                      <copy>
                        <from variable="id"/>
                        <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:id"/>
                      </copy>
                      <copy>
                        <from variable="created"/>
                        <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:created"/>
                      </copy>
                      <copy>
                        <from variable="rawMessage"/>
                        <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:payload"/>
                      </copy>
                      <copy>
                        <from variable="interfaceId"/>
                        <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:interfaceId"/>
                      </copy>
                      <copy>
                        <from variable="referenceId"/>
                        <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:referenceId"/>
                      </copy>
                      <copy>
                        <from variable="state"/>
                        <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:state"/>
                      </copy>
                      <copy>
                        <from expression="ora:getCompositeInstanceId()"/>
                        <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:updatedBy"/>
                      </copy>
                      <bpelx:remove>
                        <bpelx:target variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:lastUpdated"/>
                      </bpelx:remove>
                      <bpelx:remove>
                        <bpelx:target variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:sendAttempts"/>
                      </bpelx:remove>
                      <copy>
                        <from variable="errorMsg"/>
                        <to variable="InvUpdateINTERFACE_BUFFERIV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:errorMessage"/>
                      </copy>
                    </assign>
                  </sequence>
                  <assign name="AsgIncrementIndex">
                    <copy>
                      <from expression="bpws:getVariableData('index')+1"/>
                      <to variable="index"/>
                    </copy>
                  </assign>
                  <invoke name="InvUpdateINTERFACE_BUFFER" portType="ns16:UpdateINTERFACE_BUFFER_ptt" inputVariable="InvUpdateINTERFACE_BUFFERIV" partnerLink="UpdateINTERFACE_BUFFER" operation="update"/>
                  <assign name="AsgResetError_Msg">
                    <copy>
                      <from expression="''"/>
                      <to variable="errorMsg"/>
                    </copy>
                  </assign>
                </sequence>
              </scope>
            </sequence>
          </otherwise>
        </switch>
      </sequence>
    </while>
    <bpelx:exec name="SetCompletedTitle" language="java" version="1.3">
      <![CDATA[setCompositeInstanceTitle("Completed R:P:E:F=" + getVariableData("nReceived") + ":" + getVariableData("nProcessed") + ":" + getVariableData("nError") + ":" + getVariableData("nFailure"));]]>
    </bpelx:exec>
    <switch name="SwitchFailureRate">
      <case condition="(bpws:getVariableData('nProcessed') > 0) and (bpws:getVariableData('nProcessed')=bpws:getVariableData('nFailure'))">
        <bpelx:annotation>
          <bpelx:pattern>All failed</bpelx:pattern>
        </bpelx:annotation>
        <sequence name="Sequence_9">
          <assign name="AsgHealthCheckParams">
            <copy>
              <from expression="'doHealthCheck'"/>
              <to variable="RequestHealthCheckIV" part="payload" query="/ns18:InterfaceManagerProcessRequest/ns18:operation"/>
            </copy>
            <copy>
              <from expression="'CPFGEF'"/>
              <to variable="RequestHealthCheckIV" part="payload" query="/ns18:InterfaceManagerProcessRequest/ns18:interfaceConfig/ns19:id"/>
            </copy>
          </assign>
          <invoke name="RequestHealthCheck" partnerLink="InterfaceManager" portType="ns18:InterfaceManager" operation="process" inputVariable="RequestHealthCheckIV" outputVariable="RequestHealthCheckOV"/>
          <terminate name="Terminate"/>
        </sequence>
      </case>
      <otherwise>
        <empty name="DoNothing"/>
      </otherwise>
    </switch>
  </sequence>
</process>
