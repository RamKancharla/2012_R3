<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="EAI.MSG.OM.259_OrderRequest.xsd"/>
      <rootElement name="CSOrderRequest" namespace="http://www.reuters.com/ns/2007/01/25/GCAP/EAI/CS/OrderRequest"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="http://inkaban3ua-eai03:7777/orabpel/ccrmasync/CSOM_OrderBatcher/EAI.MSG.CS.OM.132_COMPASSOrderRequest.xsd"/>
      <rootElement name="compassOrder" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CS/OM/OrderManagement"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [MON DEC 06 17:30:02 GMT+05:30 2010]. -->
?>
<xsl:stylesheet version="1.0" xmlns:cmt="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns3="http://www.reuters.com/ns/2007/09/01/GCAP/CommonUserTypes" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:comt="http://www.reuters.com/ns/2007/09/01/GCAP/CommonOrderTypes" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CS/OM/OrderManagement" xmlns:xsdLocal="http://www.reuters.com/ns/2007/01/25/GCAP/EAI/CS/OrderRequest" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns1="http://www.reuters.com/ns/2007/09/01/GCAP/SchemaAnnotations" xmlns:ns2="http://www.reuters.com/ns/2007/09/01/GCAP/CommonAccountTypes" exclude-result-prefixes="xsl cmt xsd xsdLocal ns1 ns3 comt ns0 ns2 bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
  <xsl:template match="/">
    <ns0:compassOrder>
      <ns0:eaiHeader>
        <cmt:applicationId>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:applicationId"/>
        </cmt:applicationId>
        <cmt:transactionId>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:transactionId"/>
        </cmt:transactionId>
        <cmt:messageId>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:messageId"/>
        </cmt:messageId>
        <cmt:messageHistory>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:messageHistory"/>
        </cmt:messageHistory>
        <cmt:tracingId>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:tracingId"/>
        </cmt:tracingId>
        <cmt:timeStamp>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:timeStamp"/>
        </cmt:timeStamp>
        <cmt:instanceId>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:instanceId"/>
        </cmt:instanceId>
        <cmt:timeToLive>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:timeToLive"/>
        </cmt:timeToLive>
        <cmt:payloadVersion>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:payloadVersion"/>
        </cmt:payloadVersion>
      </ns0:eaiHeader>
      <ns0:logicalCountry>
        <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CountryCodeCoreSuiteInstanceMap.dvm&quot;,&quot;SiebelCountry&quot;,/xsdLocal:CSOrderRequest/xsdLocal:logicalCountry,&quot;CSInstance&quot;,substring(/xsdLocal:CSOrderRequest/xsdLocal:logicalCountry,1.0,2.0))"/>
      </ns0:logicalCountry>
      <ns0:messageHeader>
        <comt:messageId>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:messageId"/>
        </comt:messageId>
        <comt:transactionId>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:transactionId"/>
        </comt:transactionId>
        <comt:messageHistory>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:messageHistory"/>
        </comt:messageHistory>
        <comt:tracingId>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:eaiHeader/cmt:tracingId"/>
        </comt:tracingId>
        <comt:actionCode>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/OrderActionCodeMap.dvm&quot;,&quot;SiebelActionCode&quot;,/xsdLocal:CSOrderRequest/xsdLocal:messageHeader/xsdLocal:actionCode,&quot;CSActionCode&quot;,substring(/xsdLocal:CSOrderRequest/xsdLocal:messageHeader/xsdLocal:actionCode,1.0,4.0))"/>
        </comt:actionCode>
        <comt:version>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:messageHeader/xsdLocal:version"/>
        </comt:version>
        <comt:timeStamp>
          <xsl:value-of select="xp20:current-dateTime()"/>
        </comt:timeStamp>
        <comt:userId>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:messageHeader/xsdLocal:userId"/>
        </comt:userId>
        <comt:objectSystem>
          <xsl:value-of select="string(&quot;&quot;)"/>
        </comt:objectSystem>
      </ns0:messageHeader>
      <ns0:orderHeader>
        <comt:CRMOrderNumber>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:orderHeader/xsdLocal:CRMOrderNumber"/>
        </comt:CRMOrderNumber>
        <comt:subscriber>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:orderLineItem/xsdLocal:subscriber"/>
        </comt:subscriber>
        <comt:installDate>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:orderHeader/xsdLocal:installDate"/>
        </comt:installDate>
        <comt:removalDate>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:orderHeader/xsdLocal:removalDate"/>
        </comt:removalDate>
        <comt:po>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:orderHeader/xsdLocal:po"/>
        </comt:po>
        <comt:orderNote>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:orderHeader/xsdLocal:orderNote"/>
        </comt:orderNote>
        <comt:ssPersonId>
          <xsl:value-of select="string(&quot;&quot;)"/>
        </comt:ssPersonId>
        <xsl:choose>
          <xsl:when test="string-length(/xsdLocal:CSOrderRequest/xsdLocal:orderHeader/xsdLocal:slPersonId) > 0.0">
            <comt:slPersonId>
              <xsl:value-of select="substring(xref:lookupXRef(&quot;CRMCONTACTID_CSPERSONID&quot;,&quot;CRMCONTACTID&quot;,concat(dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CountryCodeCoreSuiteInstanceMap.dvm&quot;,&quot;SiebelCountry&quot;,/xsdLocal:CSOrderRequest/xsdLocal:logicalCountry,&quot;CSInstance&quot;,substring(/xsdLocal:CSOrderRequest/xsdLocal:logicalCountry,1.0,2.0)),/xsdLocal:CSOrderRequest/xsdLocal:orderHeader/xsdLocal:slPersonId),&quot;CSPERSONID&quot;,false()),3.0,4.0)"/>
            </comt:slPersonId>
          </xsl:when>
          <xsl:otherwise>
            <comt:slPersonId>
              <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:orderHeader/xsdLocal:slPersonId"/>
            </comt:slPersonId>
          </xsl:otherwise>
        </xsl:choose>
		<comt:pricelistCurrency>
          <xsl:value-of select="/xsdLocal:CSOrderRequest/xsdLocal:orderHeader/xsdLocal:pricelistCurrency"/>
        </comt:pricelistCurrency>
      </ns0:orderHeader>
      <xsl:for-each select="/xsdLocal:CSOrderRequest/xsdLocal:orderLineItem">
        <xsl:if test="xsdLocal:businessCase != &quot;User Swap&quot;">
          <ns0:orderLineItem>
            <comt:CRMOLIId>
              <xsl:value-of select="xsdLocal:CRMOLIId"/>
            </comt:CRMOLIId>
            <comt:actionCode>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/OrderLineActionCodeMap.dvm&quot;,&quot;SiebelOrderLineActionCode&quot;,xsdLocal:actionCode,&quot;CSOrderLineActionCode&quot;,substring(xsdLocal:actionCode,1.0,1.0))"/>
            </comt:actionCode>
            <comt:businessCase>
              <xsl:value-of select="xsdLocal:businessCase"/>
            </comt:businessCase>
            <xsl:choose>
              <xsl:when test="xsdLocal:businessCase = &quot;Abort&quot;">
                <comt:salesCode>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CRMAppReference.dvm&quot;,&quot;Reference&quot;,&quot;CSSalesCodeForAbort&quot;,&quot;Value&quot;,&quot;6&quot;)"/>
                </comt:salesCode>
              </xsl:when>
              <xsl:otherwise>
                <comt:salesCode>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SalesCodeMap.dvm&quot;,&quot;SiebelSalesCode&quot;,xsdLocal:salesCode,&quot;CSSalesCode&quot;,&quot; &quot;)"/>
                </comt:salesCode>
              </xsl:otherwise>
            </xsl:choose>
            <comt:subAccount>
              <xsl:value-of select="xsdLocal:subAccount"/>
            </comt:subAccount>
            <comt:PLI>
              <xsl:value-of select="xsdLocal:PLI"/>
            </comt:PLI>
            <comt:AKR>
              <xsl:value-of select="xsdLocal:AKR"/>
            </comt:AKR>
            <comt:permissioningSystem>
              <xsl:value-of select="xsdLocal:permissioningSystem"/>
            </comt:permissioningSystem>
            <xsl:choose>
              <xsl:when test="xsdLocal:userIDtype = &quot;QUID&quot;">
                <comt:userID>
                  <xsl:value-of select="string(&quot;&quot;)"/>
                </comt:userID>
              </xsl:when>
              <xsl:when test="xsdLocal:userIDtype = &quot;CPfG User&quot;">
                <comt:userID>
                  <xsl:value-of select="string(&quot;&quot;)"/>
                </comt:userID>
              </xsl:when>
              <xsl:when test="xsdLocal:userIDtype = &quot;ATHENA&quot;">
                <comt:userID>
                  <xsl:value-of select="substring(xsdLocal:userID,1.0,6.0)"/>
                </comt:userID>
              </xsl:when>
              <xsl:otherwise>
                <xsl:choose>
                  <xsl:when test="string-length(xsdLocal:userID) &lt;= 6.0">
                    <comt:userID>
                      <xsl:value-of select="xp20:upper-case(xsdLocal:userID)"/>
                    </comt:userID>
                  </xsl:when>
                  <xsl:otherwise>
                    <comt:userID>
                      <xsl:value-of select="string(&quot;      &quot;)"/>
                    </comt:userID>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="xsdLocal:userIDtype = &quot;QUID&quot;">
                <comt:QUID>
                  <xsl:value-of select="xsdLocal:userID"/>
                </comt:QUID>
              </xsl:when>
              <xsl:when test="xsdLocal:userIDtype = &quot;ATHENA&quot;">
                <comt:QUID>
                  <xsl:value-of select="concat(substring(xsdLocal:userID,7.0,4.0),&quot; &quot;)"/>
                </comt:QUID>
              </xsl:when>
              <xsl:otherwise>
                <comt:QUID>
                  <xsl:value-of select="xsdLocal:QUID"/>
                </comt:QUID>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="xsdLocal:actionCode = &quot;Add&quot;">
                <comt:permissionDate>
                  <xsl:value-of select="xsdLocal:installDate"/>
                </comt:permissionDate>
              </xsl:when>
              <xsl:when test="xsdLocal:actionCode = &quot;Delete&quot;">
                <comt:permissionDate>
                  <xsl:value-of select="xsdLocal:removalDate"/>
                </comt:permissionDate>
              </xsl:when>
              <xsl:otherwise>
                <comt:permissionDate>
                  <xsl:value-of select="string(&quot;&quot;)"/>
                </comt:permissionDate>
              </xsl:otherwise>
            </xsl:choose>
            <comt:specialPrice>
              <xsl:value-of select="xsdLocal:specialPrice"/>
            </comt:specialPrice>
            <comt:specialPriceCurr>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CountryISOCurCodeCSCurCode.dvm&quot;,&quot;CountryISOCurCode&quot;,concat(../xsdLocal:logicalCountry,xsdLocal:specialPriceCurr),&quot;CSCurrencyCode&quot;,xsdLocal:specialPriceCurr)"/>
            </comt:specialPriceCurr>
            <comt:specialPriceRestrictionDate>
              <xsl:value-of select="xsdLocal:specialPriceRestrictionDate"/>
            </comt:specialPriceRestrictionDate>
            <xsl:choose>
              <xsl:when test="(../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;AthenaCreate&quot;) and ((xsdLocal:businessCase = &quot;FT Conversion&quot;) and (xsdLocal:permissioningSystem = &quot;Athena&quot; and xsdLocal:actionCode = &quot;Delete&quot;))">
                <comt:itemNumber>
                  <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/EAIMetaData/Xref/OM_ASSET_INT_ID_ITEM_NO.xref&quot;,&quot;ASSET_INT_ID&quot;,concat(xsdLocal:assetIntegrationId,xsdLocal:permBillFlag),&quot;ITEM_NO&quot;,true())"/>
                </comt:itemNumber>
              </xsl:when>
              <xsl:when test="(../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;AthenaCreate&quot;) and ((xsdLocal:businessCase = &quot;FT Conversion&quot;) and (xsdLocal:permissioningSystem = &quot;Athena&quot; and xsdLocal:actionCode = &quot;Add&quot;))">
                <comt:itemNumber>
                  <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/EAIMetaData/Xref/OM_ASSET_INT_ID_ITEM_NO.xref&quot;,&quot;ASSET_INT_ID&quot;,concat(xsdLocal:itemNumber,xsdLocal:permBillFlag),&quot;ITEM_NO&quot;,true())"/>
                </comt:itemNumber>
              </xsl:when>
              <xsl:when test="(dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CRMAppReference.dvm&quot;,&quot;Reference&quot;,&quot;EnableCDMFlag&quot;,&quot;Value&quot;,&quot;N&quot;) = &quot;Y&quot;) and ((../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;Create&quot;) and ((xsdLocal:actionCode = &quot;Add&quot;) and (xsdLocal:businessCase = &quot;FT Conversion&quot;)))">
                <comt:itemNumber>
                  <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/EAIMetaData/Xref/OM_ASSET_INT_ID_ITEM_NO.xref&quot;,&quot;ASSET_INT_ID&quot;,concat(xsdLocal:itemNumber,xsdLocal:permBillFlag),&quot;ITEM_NO&quot;,true())"/>
                </comt:itemNumber>
              </xsl:when>
              <xsl:when test="(dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CRMAppReference.dvm&quot;,&quot;Reference&quot;,&quot;EnableCDMFlag&quot;,&quot;Value&quot;,&quot;N&quot;) = &quot;N&quot;) and ((../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;Create&quot;) and ((xsdLocal:actionCode = &quot;Add&quot;) and (xsdLocal:businessCase = &quot;FT Conversion&quot;)))">
                <comt:itemNumber>
                  <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/EAIMetaData/Xref/OM_ASSET_INT_ID_ITEM_NO.xref&quot;,&quot;ASSET_INT_ID&quot;,xsdLocal:itemNumber,&quot;ITEM_NO&quot;,true())"/>
                </comt:itemNumber>
              </xsl:when>
              <xsl:when test="((../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;Create&quot;) or ((../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;AthenaCreate&quot;) or (../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;AthenaAKRCreate&quot;))) and ((xsdLocal:actionCode = &quot;Add&quot;) and (xsdLocal:businessCase != &quot;Abort&quot;))">
                <comt:itemNumber>
                  <xsl:value-of select="string(&quot;&quot;)"/>
                </comt:itemNumber>
              </xsl:when>
              <xsl:otherwise>
                <xsl:choose>
                  <xsl:when test="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CRMAppReference.dvm&quot;,&quot;Reference&quot;,&quot;EnableCDMFlag&quot;,&quot;Value&quot;,&quot;N&quot;) = &quot;Y&quot;">
                    <comt:itemNumber>
                      <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/EAIMetaData/Xref/OM_ASSET_INT_ID_ITEM_NO.xref&quot;,&quot;ASSET_INT_ID&quot;,concat(xsdLocal:assetIntegrationId,xsdLocal:permBillFlag),&quot;ITEM_NO&quot;,true())"/>
                    </comt:itemNumber>
                  </xsl:when>
                  <xsl:when test="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CRMAppReference.dvm&quot;,&quot;Reference&quot;,&quot;EnableCDMFlag&quot;,&quot;Value&quot;,&quot;N&quot;) = &quot;N&quot;">
                    <comt:itemNumber>
                      <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/EAIMetaData/Xref/OM_ASSET_INT_ID_ITEM_NO.xref&quot;,&quot;ASSET_INT_ID&quot;,xsdLocal:assetIntegrationId,&quot;ITEM_NO&quot;,true())"/>
                    </comt:itemNumber>
                  </xsl:when>
                </xsl:choose>
              </xsl:otherwise>
            </xsl:choose>
            <comt:startStopBillingDate>
              <xsl:value-of select="xsdLocal:startStopBillingDate"/>
            </comt:startStopBillingDate>
            <comt:billingType>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/BillingTypeMap.dvm&quot;,&quot;SiebelBillingType&quot;,xsdLocal:billingType,&quot;CSBillingType&quot;,substring(xsdLocal:billingType,1.0,1.0))"/>
            </comt:billingType>
            <comt:billingNote>
              <xsl:value-of select="xsdLocal:billingNote"/>
            </comt:billingNote>
            <xsl:choose>
              <xsl:when test="(xsdLocal:businessCase = &quot;FT Conversion&quot;) and ((../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;Create&quot;) or ((../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;AthenaCreate&quot;) and (xsdLocal:permissioningSystem = &quot;Athena&quot;)))">
                <comt:STB>
                  <xsl:value-of select="string(&quot;X&quot;)"/>
                </comt:STB>
              </xsl:when>
              <xsl:when test="../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;Billing&quot;">
                <comt:STB>
                  <xsl:value-of select="string(&quot;Y&quot;)"/>
                </comt:STB>
              </xsl:when>
              <xsl:when test="xsdLocal:freeTrailFlag = &quot;Y&quot;">
                <comt:STB>
                  <xsl:value-of select="string(&quot;F&quot;)"/>
                </comt:STB>
              </xsl:when>
              <xsl:otherwise>
                <comt:STB>
                  <xsl:value-of select="string(&quot;N&quot;)"/>
                </comt:STB>
              </xsl:otherwise>
            </xsl:choose>
            <comt:permBillFlag>
              <xsl:value-of select="xsdLocal:permBillFlag"/>
            </comt:permBillFlag>
            <xsl:choose>
              <xsl:when test="((../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;Create&quot;) or ((../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;Billing&quot;) or ((../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;AthenaCreate&quot;) or ((../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;AthenaDelete&quot;) or (../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;AthenaAKRCreate&quot;))))) and (xsdLocal:permBillFlag = &quot;B&quot;)">
                <comt:installToSubscriber>
                  <xsl:value-of select="xsdLocal:installToSubscriber"/>
                </comt:installToSubscriber>
              </xsl:when>
              <xsl:otherwise>
                <comt:installToSubscriber>
                  <xsl:value-of select="string(&quot;&quot;)"/>
                </comt:installToSubscriber>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="(../xsdLocal:messageHeader/xsdLocal:actionCode = &quot;Billing&quot;) and ((xsdLocal:permBillFlag = &quot;B&quot;) and (xsdLocal:permissioningSystem = &quot;SPM&quot;))">
                <comt:installToItemNumber>
                  <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/EAIMetaData/Xref/OM_ASSET_INT_ID_ITEM_NO.xref&quot;,&quot;ASSET_INT_ID&quot;,concat(xsdLocal:assetIntegrationId,&quot;P&quot;),&quot;ITEM_NO&quot;,true())"/>
                </comt:installToItemNumber>
              </xsl:when>
              <xsl:otherwise>
                <comt:installToItemNumber>
                  <xsl:value-of select="string(&quot;&quot;)"/>
                </comt:installToItemNumber>
              </xsl:otherwise>
            </xsl:choose>
          </ns0:orderLineItem>
        </xsl:if>
      </xsl:for-each>
    </ns0:compassOrder>
  </xsl:template>
</xsl:stylesheet>
