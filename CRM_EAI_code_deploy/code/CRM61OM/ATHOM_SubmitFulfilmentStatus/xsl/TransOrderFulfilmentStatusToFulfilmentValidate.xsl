<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="ATHOM_OrderFulfilmentStatusRS.wsdl"/>
      <rootElement name="UserProvisionResponse" namespace="http://sea.thomsonone.com/SEA/Service/2010-07-19"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="http://inkaban3ua-eai01:7777/orabpel/ccrmsync/ATHOM_OrderFulfillmentStatus/ATHOM_OrderFulfillmentStatus?wsdl"/>
      <rootElement name="userProvisionResponse" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/ATH/UOM/UserOrderManagement"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [WED OCT 06 13:20:12 GMT+05:30 2010]. -->
?>
<xsl:stylesheet version="1.0" xmlns:ns2="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:out1="http://xml.netbeans.org/schema/BillingNotifyMessage" xmlns:client="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/ATH/UOM/ATHOM_OrderFulfillmentStatus" xmlns:ns0="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/ATH/OM/ATHOM" xmlns:ns1="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/ATH/UOM/UserOrderManagement" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:inp1="http://sea.thomsonone.com/SEA/Service/2010-07-19" xmlns:ns5="http://www.reuters.com/ns/2007/09/01/GCAP/CommonUserOrderTypes" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns4="http://www.reuters.com/ns/2007/09/01/GCAP/NillableUserOrderTypes" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns3="http://www.reuters.com/ns/2007/09/01/GCAP/SchemaAnnotations" exclude-result-prefixes="xsl out1 ns0 tns inp1 ns2 plnk client ns1 soap ns5 ns4 ns3 bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
  <xsl:template match="/">
    <ns1:userProvisionResponse>
      <ns1:eaiHeader>
        <ns2:applicationId>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:ReferenceSystem/inp1:systemName"/>
        </ns2:applicationId>
        <ns2:transactionId>
          <xsl:value-of select="string(&quot;&quot;)"/>
        </ns2:transactionId>
        <ns2:messageId>
          <xsl:value-of select="string(&quot;&quot;)"/>
        </ns2:messageId>
        <ns2:messageHistory>
          <xsl:value-of select="concat(/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:ReferenceSystem/inp1:systemName,&quot;;EAI;&quot;)"/>
        </ns2:messageHistory>
        <ns2:tracingId>
          <xsl:value-of select="string(&quot;&quot;)"/>
        </ns2:tracingId>
        <ns2:timeStamp>
          <xsl:value-of select="xp20:current-dateTime()"/>
        </ns2:timeStamp>
        <ns2:instanceId>
          <xsl:value-of select="string(&quot;&quot;)"/>
        </ns2:instanceId>
        <ns2:timeToLive>
          <xsl:value-of select="number(1.0)"/>
        </ns2:timeToLive>
        <ns2:payloadVersion>
          <xsl:value-of select="string(&quot;A&quot;)"/>
        </ns2:payloadVersion>
      </ns1:eaiHeader>
      <ns1:userMessageHeader>
        <ns1:TransactionId>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:TransactionId"/>
        </ns1:TransactionId>
        <ns1:ReferenceSystem>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:ReferenceSystem/inp1:systemName"/>
        </ns1:ReferenceSystem>
        <ns1:orderNumber>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:ReferenceSystem/inp1:orderNumber"/>
        </ns1:orderNumber>
        <ns1:ResponseDate>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:ResponseDate"/>
        </ns1:ResponseDate>
        <ns1:subscriberNumber>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:SubscriberInfo/inp1:SubscriberCode"/>
        </ns1:subscriberNumber>
        <ns1:subAccount>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:SubscriberInfo/inp1:SubAccount"/>
        </ns1:subAccount>
        <ns1:RequestStage>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:RequestStage"/>
        </ns1:RequestStage>
        <ns1:ActionCode>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:ActionCode"/>
        </ns1:ActionCode>
        <ns1:Status>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:Status"/>
        </ns1:Status>
        <ns1:NumberRequestedRecords>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:NumberRequestedRecords"/>
        </ns1:NumberRequestedRecords>
        <ns1:NumberSuccessfulRecords>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:NumberSuccessfulRecords"/>
        </ns1:NumberSuccessfulRecords>
        <ns1:NumberFailedRecords>
          <xsl:value-of select="/inp1:UserProvisionResponse/inp1:MessageHeader/inp1:NumberFailedRecords"/>
        </ns1:NumberFailedRecords>
      </ns1:userMessageHeader>
      <xsl:for-each select="/inp1:UserProvisionResponse/inp1:MessageBody/inp1:UserInfo">
        <ns1:userMessageBody>
          <ns1:UserId>
            <xsl:value-of select="inp1:UserId"/>
          </ns1:UserId>
          <ns1:ReferenceSystemUserId>
            <xsl:value-of select="inp1:ReferenceSystemUserId"/>
          </ns1:ReferenceSystemUserId>
          <ns1:subscriberNumber>
            <xsl:value-of select="inp1:SubscriberInfo/inp1:SubscriberCode"/>
          </ns1:subscriberNumber>
          <ns1:subAccount>
            <xsl:value-of select="inp1:SubscriberInfo/inp1:SubAccount"/>
          </ns1:subAccount>
          <ns1:ActionCode>
            <xsl:value-of select="inp1:ActionCode"/>
          </ns1:ActionCode>
          <ns1:TransactionStatus>
            <xsl:value-of select="inp1:TransactionStatus"/>
          </ns1:TransactionStatus>
          <ns1:TransactionId>
            <xsl:value-of select="inp1:TransactionId"/>
          </ns1:TransactionId>
          <ns1:ErrorCode>
            <xsl:value-of select="inp1:Error/inp1:ErrorCode"/>
          </ns1:ErrorCode>
          <ns1:ErrorMsg>
            <xsl:value-of select="inp1:Error/inp1:ErrorMsg"/>
          </ns1:ErrorMsg>
          <xsl:for-each select="inp1:PortfolioList/inp1:PortfolioItem">
            <ns1:portfolioList>
              <ns1:productCode>
                <xsl:value-of select="inp1:ProductCode"/>
              </ns1:productCode>
              <ns1:productLineReferenceNumber>
                <xsl:value-of select="inp1:ProductLineReferenceNumber"/>
              </ns1:productLineReferenceNumber>
              <ns1:ErrorCode>
                <xsl:value-of select="inp1:Error/inp1:ErrorCode"/>
              </ns1:ErrorCode>
              <ns1:ErrorMsg>
                <xsl:value-of select="inp1:Error/inp1:ErrorMsg"/>
              </ns1:ErrorMsg>
            </ns1:portfolioList>
          </xsl:for-each>
          <xsl:for-each select="inp1:UserSetting">
            <ns1:UserSettingStructure>
              <ns1:Server>
                <ns1:ServerName>
                  <xsl:value-of select="inp1:Server/inp1:ServerName"/>
                </ns1:ServerName>
                <ns1:ServerType>
                  <xsl:value-of select="inp1:Server/inp1:ServerType"/>
                </ns1:ServerType>
              </ns1:Server>
            </ns1:UserSettingStructure>
          </xsl:for-each>
        </ns1:userMessageBody>
      </xsl:for-each>
    </ns1:userProvisionResponse>
  </xsl:template>
</xsl:stylesheet>
