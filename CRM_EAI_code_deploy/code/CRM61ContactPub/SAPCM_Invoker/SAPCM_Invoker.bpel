<?xml version = '1.0' encoding = 'UTF-8'?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Purpose: BPEL Process
  * Version		Date		Author		          Description Of Change
  * 0.1             21/04/2010	        Chakrapani Turaga 	   Initial.
  * 0.2             06/09/2010          Chakrapani Turaga          Modified SAP end Point URL in EAI.SRV.CM.SAP.72_UpdateUserContact.wsdl and EAI.SRV.CM.SAP.73_UpdateEmployeeContact.wsdl
  * 0.2             14/09/2010          Chakrapani Turaga          Added Remove function,Changed LastUpdatedBy and Modified catch for Exceptional Handling.
  * 0.3             24/09/2010          Swapna                     Updated ermsg with null.
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="SAPCM_Invoker" targetNamespace="http://www.reuters.com/ns/2007/01/25/GCAP/EAI/SAP/SAPCM_Invoker" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:ns4="http://xmlns.oracle.com/pcbpel/adapter/db/top/PollSAPContacts" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns16="http://xmlns.oracle.com/pcbpel/adapter/db/UpdateInterfaceBuffer/" xmlns:ns5="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ns9="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/Common" xmlns:ns17="http://xmlns.oracle.com/pcbpel/adapter/db/top/UpdateInterfaceBuffer" xmlns:ns1="http://www.reuters.com/ns/2007/01/25/GCAP/EAI/UTL/Sequencer" xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/SAPCM_Contacts/" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns15="http://trm.com:I001:CustomerMaster:AccountMessage" xmlns:ns10="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns13="http://xmlns.oracle.com/pcbpel/adapter/db/top/InterfaceConfig" xmlns:ns7="http://www.reuters.com/ns/2007/01/25/GCAP/EAI/SAP/ContactRequest" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns12="http://xmlns.oracle.com/InterfaceManager" xmlns:ns18="http://xmlns.oracle.com/pcbpel/adapter/db/Polling_SAPContacts/" xmlns:client="http://www.reuters.com/ns/2007/01/25/GCAP/EAI/SAP/SAPCM_Invoker" xmlns:ns6="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ns11="http://xmlns.oracle.com/pcbpel/adapter/db/SAPCM_Contacts" xmlns:ns19="http://xmlns.oracle.com/pcbpel/adapter/db/top/PollingSAPContacts" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:ns3="http://xmlns.oracle.com/pcbpel/adapter/db/PollSAP_Contacts/" xmlns:ns14="http://www.reuters.com/ns/2007/09/01/GCAP/UTL/Sequencer" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ns8="http://trm.com:I046:OrderProcessing:Send_ContactUserInformation" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        VARIABLES                                                        
        List of messages and XML documents used within this BPEL process 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <partnerLinks>
        <partnerLink myRole="InterfaceManagerProvider" name="InterfaceManager" partnerRole="InterfaceManagerProvider" partnerLinkType="ns12:InterfaceManager"/>
        <partnerLink myRole="SequenceReleaserRequester" name="SequenceReleaser" partnerRole="SequenceReleaserProvider" partnerLinkType="ns1:SequenceReleaser"/>
        <partnerLink myRole="SI_CreateContacts_OB_Async_Role" name="UpdateUserContact" partnerRole="SI_CreateContacts_OB_Async_Role" partnerLinkType="ns8:SI_CreateContacts_OB_Async_PL"/>
        <partnerLink myRole="SI_Update_Contacts_OB_Async_Role" name="UpdateSAPEmployee" partnerRole="SI_Update_Contacts_OB_Async_Role" partnerLinkType="ns15:SI_Update_Contacts_OB_Async_PL"/>
        <partnerLink name="UpdateInterfaceBuffer" partnerRole="UpdateInterfaceBuffer_role" partnerLinkType="ns16:UpdateInterfaceBuffer_plt"/>
        <partnerLink myRole="Polling_SAPContacts_role" name="Polling_SAPContacts" partnerLinkType="ns18:Polling_SAPContacts_plt"/>
    </partnerLinks>
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <!-- Reference to the message that will be sent back to the requester during callback -->
        <variable name="nReceived" type="xsd:integer"/>
        <variable name="nProcessed" type="xsd:integer"/>
        <variable name="nErrors" type="xsd:integer"/>
        <variable name="nFailures" type="xsd:integer"/>
        <variable name="nSent" type="xsd:integer"/>
        <variable name="rawMessage" type="xsd:string"/>
        <variable name="parsedRawMessage" type="xsd:string"/>
        <variable name="state" type="xsd:string"/>
        <variable name="id" type="xsd:string"/>
        <variable name="Created" type="xsd:string"/>
        <variable name="interfaceId" type="xsd:string"/>
        <variable name="referenceId" type="xsd:string"/>
        <variable name="releaseSequence" type="xsd:boolean"/>
        <variable name="Payload" type="xsd:string"/>
        <variable name="IInvokeSAPContacts_OP_CreateContacts_Async_InputVariable" messageType="ns8:MT_Create_Contacts"/>
        <variable name="SIEBELID" type="xsd:string"/>
        <variable name="RequestHealthCheck_IV" messageType="ns12:InterfaceManagerRequestMessage"/>
        <variable name="RequestHealthCheck_OV" messageType="ns12:InterfaceManagerResponseMessage"/>
        <variable name="InvSeqReleaser_IV" messageType="ns1:SequenceReleaserRequestMessage"/>
        <variable name="UpdateUserContact_IV" messageType="ns8:MT_Create_Contacts"/>
        <variable name="UpdateUserContacts_IV" messageType="ns8:MT_Create_Contacts"/>
        <variable name="UpdateEmployee_IV" messageType="ns15:idoc.ZSDCONT.ZSDCONT"/>
        <variable name="errorMsg" type="xsd:string"/>
        <variable name="InvokeUpdateDB_IV" messageType="ns16:InterfaceBufferCollection_msg"/>
        <variable name="SAPContactRequest" element="ns7:Contacts"/>
        <variable name="rcvSAPCMIV" messageType="ns18:SapcmPollingVCollection_msg"/>
    </variables>
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       ORCHESTRATION LOGIC                                               
       Set of activities coordinating the flow of messages across the    
       services integrated within this business process                  
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in SAPCM_Invoker.wsdl) -->
        <!-- 
          Asynchronous callback to the requester. (Note: the callback location and correlation id is transparently handled using WS-addressing.)
        -->
        <receive name="receiveContactRequest" partnerLink="Polling_SAPContacts" portType="ns18:Polling_SAPContacts_ptt" operation="receive" variable="rcvSAPCMIV" createInstance="yes"/>
        <assign name="AsgInitialVariables">
            <copy>
                <from expression="0"/>
                <to variable="nProcessed"/>
            </copy>
            <copy>
                <from expression="0"/>
                <to variable="nErrors"/>
            </copy>
            <copy>
                <from expression="0"/>
                <to variable="nFailures"/>
            </copy>
            <copy>
                <from expression="'false'"/>
                <to variable="releaseSequence"/>
            </copy>
            <copy>
                <from expression="0"/>
                <to variable="nSent"/>
            </copy>
            <copy>
                <from variable="rcvSAPCMIV" part="SapcmPollingVCollection" query="/ns19:SapcmPollingVCollection/ns19:SapcmPollingV[bpws:getVariableData('nProcessed') +1]/ns19:payload"/>
                <to variable="Payload"/>
            </copy>
            <copy>
                <from expression="count(bpws:getVariableData('rcvSAPCMIV','SapcmPollingVCollection','/ns19:SapcmPollingVCollection/ns19:SapcmPollingV'))"/>
                <to variable="nReceived"/>
            </copy>
            <copy>
                <from expression="''"/>
                <to variable="errorMsg"/>
            </copy>
        </assign>
        <bpelx:exec name="AsgCustomTitle" language="java" version="1.5">
            <![CDATA[setCompositeInstanceTitle("Processing " + getVariableData("nReceived") + " messages");]]>
        </bpelx:exec>
        <while name="While_1" condition="bpws:getVariableData('nProcessed') &lt; bpws:getVariableData('nReceived')">
            <sequence name="ProcessEachAccount">
                <scope name="SAPContactScope">
                    <variables>
                        <variable name="javaException" type="xsd:string"/>
                    </variables>
                    <faultHandlers>
                        <catchAll>
                            <sequence name="Sequence_5">
                                <assign name="AsgFailure">
                                    <copy>
                                        <from expression="bpws:getVariableData('nFailures') + 1"/>
                                        <to variable="nFailures"/>
                                    </copy>
                                </assign>
                                <assign name="Asg-STATE-releaseSequence">
                                    <copy>
                                        <from expression="'R'"/>
                                        <to variable="state"/>
                                    </copy>
                                    <copy>
                                        <from expression="'false'"/>
                                        <to variable="releaseSequence"/>
                                    </copy>
                                    <copy>
                                        <from expression="substring(substring-after(substring-before(ora:getFaultAsString(),'&lt;/summary>'),'&lt;summary>'),0,1999)"/>
                                        <to variable="errorMsg"/>
                                    </copy>
                                </assign>
                            </sequence>
                        </catchAll>
                    </faultHandlers>
                    <sequence name="SeqInitVar">
                        <assign name="AsgAccountToLocalVariables">
                            <copy>
                                <from variable="rcvSAPCMIV" part="SapcmPollingVCollection" query="/ns19:SapcmPollingVCollection/ns19:SapcmPollingV[bpws:getVariableData('nProcessed') +1]/ns19:payload"/>
                                <to variable="rawMessage"/>
                            </copy>
                            <copy>
                                <from variable="rcvSAPCMIV" part="SapcmPollingVCollection" query="/ns19:SapcmPollingVCollection/ns19:SapcmPollingV[bpws:getVariableData('nProcessed') +1]/ns19:id"/>
                                <to variable="id"/>
                            </copy>
                            <copy>
                                <from variable="rcvSAPCMIV" part="SapcmPollingVCollection" query="/ns19:SapcmPollingVCollection/ns19:SapcmPollingV[bpws:getVariableData('nProcessed') +1]/ns19:interfaceId"/>
                                <to variable="interfaceId"/>
                            </copy>
                            <copy>
                                <from variable="rcvSAPCMIV" part="SapcmPollingVCollection" query="/ns19:SapcmPollingVCollection/ns19:SapcmPollingV[bpws:getVariableData('nProcessed') +1]/ns19:referenceId"/>
                                <to variable="referenceId"/>
                            </copy>
                            <copy>
                                <from variable="rcvSAPCMIV" part="SapcmPollingVCollection" query="/ns19:SapcmPollingVCollection/ns19:SapcmPollingV[bpws:getVariableData('nProcessed') +1]/ns19:state"/>
                                <to variable="state"/>
                            </copy>
                            <copy>
                                <from variable="rcvSAPCMIV" part="SapcmPollingVCollection" query="/ns19:SapcmPollingVCollection/ns19:SapcmPollingV[bpws:getVariableData('nProcessed') +1]/ns19:created"/>
                                <to variable="Created"/>
                            </copy>
                        </assign>
                        <bpelx:exec name="ReplaceUnsafeCharactersInRawMessage" language="java" version="1.5">
                            <![CDATA[try {                                      
    setVariableData("parsedRawMessage", ((String)getVariableData("rawMessage")).replaceAll("&", "&amp;") );                
    } catch (Exception e) {                                   
        setVariableData("javaException", e.getMessage() );                            
    }]]>
                        </bpelx:exec>
                        <switch name="Switch_1">
                            <case condition="bpws:getVariableData('javaException') !=''">
                                <sequence name="Sequence_7">
                                    <assign name="AsgState-ERROR-DoNotRelease">
                                        <copy>
                                            <from expression="'F'"/>
                                            <to variable="state"/>
                                        </copy>
                                        <copy>
                                            <from expression="'false'"/>
                                            <to variable="releaseSequence"/>
                                        </copy>
                                    </assign>
                                </sequence>
                            </case>
                            <otherwise>
                                <sequence name="ContactSeq">
                                    <scope name="SAPContactScope">
                                        <sequence name="SeqofContact">
                                            <assign name="AsgInitValues">
                                                <copy>
                                                    <from expression="ora:parseEscapedXML(bpws:getVariableData('parsedRawMessage'))"/>
                                                    <to variable="SAPContactRequest" query="/ns7:Contacts"/>
                                                </copy>
                                            </assign>
                                            <switch name="Switch_3">
                                                <case condition="bpws:getVariableData('SAPContactRequest','/ns7:Contacts/ns7:contact/ns7:subtype')='EMPLOYEE'">
                                                    <sequence name="SeqToEmployee">
                                                        <assign name="TransToSAPEmployee">
                                                            <bpelx:annotation>
                                                                <bpelx:pattern>transformation</bpelx:pattern>
                                                            </bpelx:annotation>
                                                            <copy>
                                                                <from expression="ora:processXSLT('TransToSAPEmployee.xsl',bpws:getVariableData('SAPContactRequest'))"/>
                                                                <to variable="UpdateEmployee_IV" part="idoc"/>
                                                            </copy>
                                                        </assign>
                                                        <invoke name="InvUpdateEmployee" partnerLink="UpdateSAPEmployee" portType="ns15:SI_Update_Contacts_OB_Async" operation="OP_Update_Contacts_Async" inputVariable="UpdateEmployee_IV"/>
                                                        <assign name="AsgEmployeeState-COMPLETE-Release">
                                                            <copy>
                                                                <from expression="'C'"/>
                                                                <to variable="state"/>
                                                            </copy>
                                                            <copy>
                                                                <from expression="'true'"/>
                                                                <to variable="releaseSequence"/>
                                                            </copy>
                                                            <copy>
                                                                <from expression="'SUCCESS'"/>
                                                                <to variable="errorMsg"/>
                                                            </copy>
                                                        </assign>
                                                    </sequence>
                                                </case>
                                                <case condition="bpws:getVariableData('SAPContactRequest','/ns7:Contacts/ns7:contact/ns7:subtype') = 'CONTACT'">
                                                    <sequence name="SeqToContact">
                                                        <assign name="TransToSAPContacts">
                                                            <bpelx:annotation>
                                                                <bpelx:pattern>transformation</bpelx:pattern>
                                                            </bpelx:annotation>
                                                            <copy>
                                                                <from expression="ora:processXSLT('TransInputSAPToSAPContacts.xsl',bpws:getVariableData('SAPContactRequest'))"/>
                                                                <to variable="UpdateUserContacts_IV" part="MT_Create_Contacts"/>
                                                            </copy>
                                                        </assign>
                                                        <invoke name="InvUpdateUserContact" partnerLink="UpdateUserContact" portType="ns8:SI_CreateContacts_OB_Async" operation="OP_CreateContacts_Async" inputVariable="UpdateUserContacts_IV"/>
                                                        <assign name="AsgContactState-COMPLETE-Release">
                                                            <copy>
                                                                <from expression="'C'"/>
                                                                <to variable="state"/>
                                                            </copy>
                                                            <copy>
                                                                <from expression="&quot;SUCCESS&quot;"/>
                                                                <to variable="errorMsg"/>
                                                            </copy>
                                                            <copy>
                                                                <from expression="'true'"/>
                                                                <to variable="releaseSequence"/>
                                                            </copy>
                                                        </assign>
                                                    </sequence>
                                                </case>
                                                <otherwise>
                                                    <empty name="ToDoNothing"/>
                                                </otherwise>
                                            </switch>
                                        </sequence>
                                    </scope>
                                </sequence>
                            </otherwise>
                        </switch>
                    </sequence>
                </scope>
                <switch name="ReleaseSwitch">
                    <case condition="bpws:getVariableData('releaseSequence') = 'true'">
                        <sequence name="ReleaseSequence">
                            <assign name="AsnSequenceRelRequest">
                                <copy>
                                    <from expression="&quot;EAI&quot;"/>
                                    <to variable="InvSeqReleaser_IV" part="payload" query="/ns14:releaseSequenceRequest/ns14:eaiHeader/ns10:applicationId"/>
                                </copy>
                                <copy>
                                    <from expression="ora:getCompositeInstanceId()"/>
                                    <to variable="InvSeqReleaser_IV" part="payload" query="/ns14:releaseSequenceRequest/ns14:eaiHeader/ns10:transactionId"/>
                                </copy>
                                <copy>
                                    <from expression="ora:getCompositeInstanceId()"/>
                                    <to variable="InvSeqReleaser_IV" part="payload" query="/ns14:releaseSequenceRequest/ns14:eaiHeader/ns10:messageId"/>
                                </copy>
                                <copy>
                                    <from expression="&quot;EAI&quot;"/>
                                    <to variable="InvSeqReleaser_IV" part="payload" query="/ns14:releaseSequenceRequest/ns14:eaiHeader/ns10:messageHistory"/>
                                </copy>
                                <copy>
                                    <from expression="ora:getCurrentDateTime()"/>
                                    <to variable="InvSeqReleaser_IV" part="payload" query="/ns14:releaseSequenceRequest/ns14:eaiHeader/ns10:timeStamp"/>
                                </copy>
                                <copy>
                                    <from expression="ora:getCompositeInstanceId()"/>
                                    <to variable="InvSeqReleaser_IV" part="payload" query="/ns14:releaseSequenceRequest/ns14:eaiHeader/ns10:instanceId"/>
                                </copy>
                                <copy>
                                    <from expression="&quot;1&quot;"/>
                                    <to variable="InvSeqReleaser_IV" part="payload" query="/ns14:releaseSequenceRequest/ns14:eaiHeader/ns10:timeToLive"/>
                                </copy>
                                <copy>
                                    <from expression="&quot;V&quot;"/>
                                    <to variable="InvSeqReleaser_IV" part="payload" query="/ns14:releaseSequenceRequest/ns14:eaiHeader/ns10:payloadVersion"/>
                                </copy>
                                <copy>
                                    <from variable="SAPContactRequest" query="/ns7:Contacts/ns7:contact/ns7:siebel_id"/>
                                    <to variable="SIEBELID"/>
                                </copy>
                                <copy>
                                    <from variable="SAPContactRequest" query="/ns7:Contacts/ns7:eaiHeader/ns10:tracingId"/>
                                    <to variable="InvSeqReleaser_IV" part="payload" query="/ns14:releaseSequenceRequest/ns14:eaiHeader/ns10:tracingId"/>
                                </copy>
                                <copy>
                                    <from variable="SAPContactRequest" query="/ns7:Contacts/ns7:eaiHeader/ns10:tracingId"/>
                                    <to variable="InvSeqReleaser_IV" part="payload" query="/ns14:releaseSequenceRequest/ns14:correlationID"/>
                                </copy>
                            </assign>
                            <invoke name="InvSeqReleaser" partnerLink="SequenceReleaser" portType="ns1:SequenceReleaser" operation="releaseSequence" inputVariable="InvSeqReleaser_IV"/>
                        </sequence>
                    </case>
                    <otherwise>
                        <empty name="DONothing"/>
                    </otherwise>
                </switch>
                <sequence name="UpdateInterfaceBufferSeq">
                    <assign name="TransBlankUpdateSuccessMessage">
                        <bpelx:annotation>
                            <bpelx:pattern>transformation</bpelx:pattern>
                        </bpelx:annotation>
                        <copy>
                            <from expression="ora:processXSLT('TransBlankUpdateSuccessMessage.xsl',bpws:getVariableData('InvokeUpdateDB_IV','InterfaceBufferCollection'))"/>
                            <to variable="InvokeUpdateDB_IV" part="InterfaceBufferCollection"/>
                        </copy>
                    </assign>
                    <assign name="AsgSuccessMessageToDbWriteBack">
                        <copy>
                            <from variable="id"/>
                            <to variable="InvokeUpdateDB_IV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:id"/>
                        </copy>
                        <copy>
                            <from variable="Created"/>
                            <to variable="InvokeUpdateDB_IV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:created"/>
                        </copy>
                        <copy>
                            <from variable="rawMessage"/>
                            <to variable="InvokeUpdateDB_IV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:payload"/>
                        </copy>
                        <copy>
                            <from variable="interfaceId"/>
                            <to variable="InvokeUpdateDB_IV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:interfaceId"/>
                        </copy>
                        <copy>
                            <from variable="referenceId"/>
                            <to variable="InvokeUpdateDB_IV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:referenceId"/>
                        </copy>
                        <copy>
                            <from variable="state"/>
                            <to variable="InvokeUpdateDB_IV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:state"/>
                        </copy>
                        <copy>
                            <from expression="ora:getCompositeInstanceId()"/>
                            <to variable="InvokeUpdateDB_IV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:updatedBy"/>
                        </copy>
                        <copy>
                            <from variable="errorMsg"/>
                            <to variable="InvokeUpdateDB_IV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:errorMessage"/>
                        </copy>
                        <bpelx:remove>
                            <bpelx:target variable="InvokeUpdateDB_IV" part="InterfaceBufferCollection" query="/ns17:InterfaceBufferCollection/ns17:InterfaceBuffer/ns17:lastUpdated"/>
                        </bpelx:remove>
                    </assign>
                    <invoke name="InvokeUpdateDB" partnerLink="UpdateInterfaceBuffer" portType="ns16:UpdateInterfaceBuffer_ptt" operation="update" inputVariable="InvokeUpdateDB_IV"/>
                </sequence>
                <assign name="IncrementProcessed">
                    <copy>
                        <from expression="bpws:getVariableData('nProcessed')+1"/>
                        <to variable="nProcessed"/>
                    </copy>
                </assign>
            </sequence>
        </while>
        <bpelx:exec name="SetUpdateTitle" language="java" version="1.3">
            <![CDATA[setCompositeInstanceTitle("Completed R:P:E:F=" + getVariableData("nReceived") + ":" + getVariableData("nProcessed") + ":" + getVariableData("nErrors") + ":" + getVariableData("nFailures"));]]>
        </bpelx:exec>
        <switch name="Switch_2">
            <case condition="bpws:getVariableData('nProcessed') = bpws:getVariableData('nFailures')">
                <sequence name="HealhCheckSequence">
                    <assign name="AsgHealthCheckParams">
                        <copy>
                            <from expression="'doHealthCheck'"/>
                            <to variable="RequestHealthCheck_IV" part="payload"
                                query="/ns12:InterfaceManagerProcessRequest/ns12:operation"/>
                        </copy>
                        <copy>
                            <from expression="'SAPCM'"/>
                            <to part="payload"
                                query="/ns12:InterfaceManagerProcessRequest/ns12:interfaceConfig/ns13:id"
                                variable="RequestHealthCheck_IV"/>
                        </copy>
                    </assign>
                    <invoke name="InvRequestHealthCheck" partnerLink="InterfaceManager" portType="ns12:InterfaceManager" operation="process" inputVariable="RequestHealthCheck_IV" outputVariable="RequestHealthCheck_OV"/>
                    <terminate name="Terminate"/>
                </sequence>
            </case>
            <otherwise>
                <empty name="DoNothing"/>
            </otherwise>
        </switch>
    </sequence>
</process>
