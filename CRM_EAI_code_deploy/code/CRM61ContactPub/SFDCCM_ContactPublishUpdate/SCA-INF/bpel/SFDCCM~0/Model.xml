<?xml version="1.0" encoding="UTF-8"?>
<process name="SFDCCM_ContactPublishUpdate" targetNamespace="http://xmlns.oracle.com/CRM61ContactPub/SFDCCM_ContactPublishUpdate/SFDCCM_ContactPublishUpdate" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:client="http://xmlns.oracle.com/CRM61ContactPub/SFDCCM_ContactPublishUpdate/SFDCCM_ContactPublishUpdate" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/mq/CRM61ContactPub/SFDCCM_ContactPublishUpdate/SiebelInboundResponse" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:ns2="http://www.siebel.com/xml/RCRMGenericContactInterface" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://www.reuters.com/ns/2007/01/25/GCAP/EAI/UTL/Sequencer" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:ns4="http://www.reuters.com/ns/2007/09/01/GCAP/UTL/Sequencer" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ns5="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" id="BpPrc0">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="SiebelInboundResponse" partnerLinkType="ns1:Dequeue_plt" myRole="Dequeue_role"/>
    <partnerLink name="SequenceReleaser" partnerLinkType="ns3:SequenceReleaser" partnerRole="SequenceReleaserProvider" myRole="SequenceReleaserRequester"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:Dequeue_msg"/>
    <variable name="xrefReturnVar" type="xsd:string"/>
    <variable name="InvokeSequenceRelease_releaseSequence_InputVariable" messageType="ns3:SequenceReleaserRequestMessage"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main" id="BpSeq0">

    <!-- Receive input from requestor. (Note: This maps to operation defined in SFDCCM_ContactPublishUpdate.wsdl) -->
    <receive name="receiveInput" variable="inputVariable" createInstance="yes" partnerLink="SiebelInboundResponse" portType="ns1:Dequeue_ptt" operation="Dequeue" id="BpRcv0"/>
    <scope name="ScopeToCheckErrorOrSuccessResponse" variableAccessSerializable="no" id="BpScp0">
      <switch name="Switch1" id="BpSwt0">
        <case condition="bpws:getVariableData('inputVariable','body','/ns2:ListOfGenContactInterface/ns2:ContactHeader/ns2:ActionCode') = 'SUCCESS'">
          <bpelx:annotation>
            <bpelx:general>
              <bpelx:property name="userLabel">CheckForSuccess</bpelx:property>
            </bpelx:general>
          </bpelx:annotation>
          <scope name="ScopeToCheckIfThisIsCreateOrUpdateResponse" variableAccessSerializable="no" id="BpScp1">
            <switch name="Switch2" id="BpSwt1">
              <case condition="string-length(bpws:getVariableData('inputVariable','body','/ns2:ListOfGenContactInterface/ns2:ContactHeader/ns2:Contact/ns2:ContactResponse/ns2:RCRMField1')) > 0 and string-length(bpws:getVariableData('inputVariable','body','/ns2:ListOfGenContactInterface/ns2:ContactHeader/ns2:Contact/ns2:ContactResponse/ns2:RCRMContactUniqueNumber')) > 0">
                <bpelx:annotation>
                  <bpelx:general>
                    <bpelx:property name="userLabel">CheckIfCreateResponse</bpelx:property>
                  </bpelx:general>
                </bpelx:annotation>
                <assign name="AssignToPopulateXrefInCreateResponse" id="BpAss0">
                  <copy>
                    <from expression="xref:populateXRefRow(&quot;oramds:/apps/EAIMetaData/Xref/SFDC_CRM_CONTACTSXREF.xref&quot;,&quot;CONTACTUNIQUENUMBER&quot;,bpws:getVariableData('inputVariable','body','/ns2:ListOfGenContactInterface/ns2:ContactHeader/ns2:Contact/ns2:ContactResponse/ns2:RCRMField1'),&quot;RCRMCONTACTNUMBER&quot;,bpws:getVariableData('inputVariable','body','/ns2:ListOfGenContactInterface/ns2:ContactHeader/ns2:Contact/ns2:ContactResponse/ns2:RCRMContactUniqueNumber'),&quot;ADD&quot;)"/>
                    <to variable="xrefReturnVar"/>
                  </copy>
                </assign>
              </case>
              <otherwise>
                <empty name="DoNothing" id="BpEmp0"/>
              </otherwise>
            </switch>
          </scope>
        </case>
        <otherwise>
          <empty name="DoNothing" id="BpEmp1"/>
        </otherwise>
      </switch>
    </scope>
    <scope name="ScopeForSequenceRelease" variableAccessSerializable="no" id="BpScp2">

      <sequence name="SequenceForSequenceReleaser" id="BpSeq1">
        <assign name="AssignInputForSequenceRecieve" id="BpAss1">
          <copy>
            <from expression="'EAI'"/>
            <to variable="InvokeSequenceRelease_releaseSequence_InputVariable" part="payload" query="/ns4:releaseSequenceRequest/ns4:eaiHeader/ns5:applicationId"/>
          </copy>
          <copy>
            <from expression="ora:getCompositeInstanceId()"/>
            <to variable="InvokeSequenceRelease_releaseSequence_InputVariable" part="payload" query="/ns4:releaseSequenceRequest/ns4:eaiHeader/ns5:transactionId"/>
          </copy>
          <copy>
            <from expression="ora:getCompositeInstanceId()"/>
            <to variable="InvokeSequenceRelease_releaseSequence_InputVariable" part="payload" query="/ns4:releaseSequenceRequest/ns4:eaiHeader/ns5:messageId"/>
          </copy>
          <copy>
            <from expression="'EAI;'"/>
            <to variable="InvokeSequenceRelease_releaseSequence_InputVariable" part="payload" query="/ns4:releaseSequenceRequest/ns4:eaiHeader/ns5:messageHistory"/>
          </copy>
          <copy>
            <from expression="xp20:current-dateTime()"/>
            <to variable="InvokeSequenceRelease_releaseSequence_InputVariable" part="payload" query="/ns4:releaseSequenceRequest/ns4:eaiHeader/ns5:timeStamp"/>
          </copy>
          <copy>
            <from expression="ora:getCompositeInstanceId()"/>
            <to variable="InvokeSequenceRelease_releaseSequence_InputVariable" part="payload" query="/ns4:releaseSequenceRequest/ns4:eaiHeader/ns5:instanceId"/>
          </copy>
          <copy>
            <from expression="1"/>
            <to variable="InvokeSequenceRelease_releaseSequence_InputVariable" part="payload" query="/ns4:releaseSequenceRequest/ns4:eaiHeader/ns5:timeToLive"/>
          </copy>
          <copy>
            <from expression="'V'"/>
            <to variable="InvokeSequenceRelease_releaseSequence_InputVariable" part="payload" query="/ns4:releaseSequenceRequest/ns4:eaiHeader/ns5:payloadVersion"/>
          </copy>
          <copy>
            <from variable="inputVariable" part="body" query="/ns2:ListOfGenContactInterface/ns2:ContactHeader/ns2:MessageId"/>
            <to variable="InvokeSequenceRelease_releaseSequence_InputVariable" part="payload" query="/ns4:releaseSequenceRequest/ns4:eaiHeader/ns5:tracingId"/>
          </copy>
          <copy>
            <from variable="inputVariable" part="body" query="/ns2:ListOfGenContactInterface/ns2:ContactHeader/ns2:MessageId"/>
            <to variable="InvokeSequenceRelease_releaseSequence_InputVariable" part="payload" query="/ns4:releaseSequenceRequest/ns4:correlationID"/>
          </copy>
        </assign>
        <invoke name="InvokeSequenceRelease" inputVariable="InvokeSequenceRelease_releaseSequence_InputVariable" partnerLink="SequenceReleaser" portType="ns3:SequenceReleaser" operation="releaseSequence" bpelx:invokeAsDetail="no" id="BpInv0"/>
      </sequence>
    </scope>
  </sequence>
</process><!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Dec 19 11:43:42 GMT+05:30 2011
  Author:  Tanmay.Saxena
  Type: BPEL 1.1 Process
  Purpose: One Way BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->