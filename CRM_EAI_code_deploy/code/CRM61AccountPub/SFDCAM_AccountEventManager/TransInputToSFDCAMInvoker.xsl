<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/EAIMetaData/schemas/EAI.MSG.AM.176_AccountEvent.xsd"/>
      <rootElement name="accountEvent" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/AM/AccountPublish"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="EAI.MSG.SFDC.AM.236_PublishAccountEventRequest.xsd"/>
      <rootElement name="accountPubRequest" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/SFDC/AccountPublish"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.4.0(build 110106.1932.5682) AT [THU MAR 15 20:49:33 GMT+05:30 2012]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:ns1="http://www.reuters.com/ns/2007/09/01/GCAP/SchemaAnnotations"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:gcap-cut="http://www.reuters.com/ns/2007/09/01/GCAP/CommonUserTypes"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:gcap-NAT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableAccountTypes"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:gcap-NUT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableUserTypes"
                xmlns:gcap-cmt="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes"
                xmlns:local="http://www.reuters.com/ns/2007/09/01/GCAP/SFDC/AccountPublish"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:ns0="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/AM/AccountPublish"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:gcap-cat="http://www.reuters.com/ns/2007/09/01/GCAP/CommonAccountTypes"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                exclude-result-prefixes="xsi xsl ns1 gcap-cut gcap-NAT gcap-NUT gcap-cmt ns0 xsd gcap-cat local xp20 bpws bpel bpm ora socket mhdr orcl dvm hwf med ids xdk xref ldap">
  <xsl:template match="/">
    <local:accountPubRequest>
      <local:eaiHeader>
        <gcap-cmt:applicationId>
          <xsl:value-of select="/ns0:accountEvent/ns0:eaiHeader/gcap-cmt:applicationId"/>
        </gcap-cmt:applicationId>
        <gcap-cmt:transactionId>
          <xsl:value-of select="/ns0:accountEvent/ns0:eaiHeader/gcap-cmt:transactionId"/>
        </gcap-cmt:transactionId>
        <gcap-cmt:messageId>
          <xsl:value-of select="/ns0:accountEvent/ns0:eaiHeader/gcap-cmt:messageId"/>
        </gcap-cmt:messageId>
        <gcap-cmt:messageHistory>
          <xsl:value-of select="/ns0:accountEvent/ns0:eaiHeader/gcap-cmt:messageHistory"/>
        </gcap-cmt:messageHistory>
        <gcap-cmt:tracingId>
          <xsl:value-of select="/ns0:accountEvent/ns0:eaiHeader/gcap-cmt:tracingId"/>
        </gcap-cmt:tracingId>
        <gcap-cmt:timeStamp>
          <xsl:value-of select="/ns0:accountEvent/ns0:eaiHeader/gcap-cmt:timeStamp"/>
        </gcap-cmt:timeStamp>
        <gcap-cmt:instanceId>
          <xsl:value-of select="/ns0:accountEvent/ns0:eaiHeader/gcap-cmt:instanceId"/>
        </gcap-cmt:instanceId>
        <gcap-cmt:timeToLive>
          <xsl:value-of select="/ns0:accountEvent/ns0:eaiHeader/gcap-cmt:timeToLive"/>
        </gcap-cmt:timeToLive>
        <gcap-cmt:payloadVersion>
          <xsl:value-of select="/ns0:accountEvent/ns0:eaiHeader/gcap-cmt:payloadVersion"/>
        </gcap-cmt:payloadVersion>
      </local:eaiHeader>
      <local:actionCode>
        <xsl:value-of select="/ns0:accountEvent/ns0:actionCode"/>
      </local:actionCode>
      <xsl:variable name="addCnt"
                    select="count(/ns0:accountEvent/ns0:accountAddress)"/>
      <local:account>
        <local:accountId>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:id"/>
        </local:accountId>
        <local:accountName>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:name"/>
        </local:accountName>
        <xsl:choose>
          <xsl:when test='/ns0:accountEvent/ns0:actionCode = "Delete"'>
            <local:SFDCID>
              <xsl:value-of select='xref:lookupXRef("oramds:/apps/EAIMetaData/Xref/CRM_SFDC_ACCTXREF.xref","SIEBELID",/ns0:accountEvent/ns0:account/ns0:id,"SFDCID",true())'/>
            </local:SFDCID>
          </xsl:when>
          <xsl:otherwise>
            <local:SFDCID>
              <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:SFDCID"/>
            </local:SFDCID>
          </xsl:otherwise>
        </xsl:choose>
        <local:caID>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:caID"/>
        </local:caID>
        <xsl:choose>
          <xsl:when test='/ns0:accountEvent/ns0:actionCode = "Delete"'>
            <local:accountStatus>
              <xsl:value-of select='string("InActive")'/>
            </local:accountStatus>
          </xsl:when>
          <xsl:otherwise>
            <local:accountStatus>
              <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:accountStatus"/>
            </local:accountStatus>
          </xsl:otherwise>
        </xsl:choose>
        <local:accountOwner>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:ownerMail"/>
        </local:accountOwner>
        <local:phone>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:phoneNumber"/>
        </local:phone>
        <local:Fax>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:faxNumber"/>
        </local:Fax>
        <local:website>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:HomePage"/>
        </local:website>
        <local:segment>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:organisationTypeDesc"/>
        </local:segment>
        <local:accountCurrency>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:currencyCode"/>
        </local:accountCurrency>
        <xsl:choose>
          <xsl:when test="$addCnt > 1.0">
            <xsl:for-each select="/ns0:accountEvent/ns0:accountAddress">
              <xsl:if test="ns0:id = ns0:accountPrimaryAddressId">
                <xsl:choose>
                  <xsl:when test='ns0:floorAddress != ""'>
                    <local:shippingStreet>
                      <xsl:value-of select='concat(ns0:floorAddress," ",ns0:streetAddress)'/>
                    </local:shippingStreet>
                  </xsl:when>
                  <xsl:otherwise>
                    <local:shippingStreet>
                      <xsl:value-of select="ns0:streetAddress"/>
                    </local:shippingStreet>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:if>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <xsl:choose>
              <xsl:when test='/ns0:accountEvent/ns0:accountAddress/ns0:floorAddress != ""'>
                <local:shippingStreet>
                  <xsl:value-of select='concat(/ns0:accountEvent/ns0:accountAddress/ns0:floorAddress," ",/ns0:accountEvent/ns0:accountAddress/ns0:streetAddress)'/>
                </local:shippingStreet>
              </xsl:when>
              <xsl:otherwise>
                <local:shippingStreet>
                  <xsl:value-of select="/ns0:accountEvent/ns0:accountAddress/ns0:streetAddress"/>
                </local:shippingStreet>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$addCnt > 1.0">
            <xsl:for-each select="/ns0:accountEvent/ns0:accountAddress">
              <xsl:if test="ns0:id = ns0:accountPrimaryAddressId">
                <local:shippingCity>
                  <xsl:value-of select="ns0:city"/>
                </local:shippingCity>
              </xsl:if>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <local:shippingCity>
              <xsl:value-of select="/ns0:accountEvent/ns0:accountAddress/ns0:city"/>
            </local:shippingCity>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$addCnt > 1.0">
            <xsl:for-each select="/ns0:accountEvent/ns0:accountAddress">
              <xsl:if test="ns0:id = ns0:accountPrimaryAddressId">
                <local:shippingState>
                  <xsl:value-of select="ns0:state"/>
                </local:shippingState>
              </xsl:if>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <local:shippingState>
              <xsl:value-of select="/ns0:accountEvent/ns0:accountAddress/ns0:state"/>
            </local:shippingState>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$addCnt > 1.0">
            <xsl:for-each select="/ns0:accountEvent/ns0:accountAddress">
              <xsl:if test="ns0:id = ns0:accountPrimaryAddressId">
                <local:shippingCountry>
                  <xsl:value-of select="ns0:country"/>
                </local:shippingCountry>
              </xsl:if>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <local:shippingCountry>
              <xsl:value-of select="/ns0:accountEvent/ns0:accountAddress/ns0:country"/>
            </local:shippingCountry>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$addCnt > 1.0">
            <xsl:for-each select="/ns0:accountEvent/ns0:accountAddress">
              <xsl:if test="ns0:id = ns0:accountPrimaryAddressId">
                <local:shippingPostal>
                  <xsl:value-of select="ns0:postalCode"/>
                </local:shippingPostal>
              </xsl:if>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <local:shippingPostal>
              <xsl:value-of select="/ns0:accountEvent/ns0:accountAddress/ns0:postalCode"/>
            </local:shippingPostal>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$addCnt > 1.0">
            <xsl:for-each select="/ns0:accountEvent/ns0:accountAddress">
              <xsl:if test="ns0:id = ns0:accountPrimaryAddressId">
                <local:region>
                  <xsl:value-of select="ns0:region"/>
                </local:region>
              </xsl:if>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <local:region>
              <xsl:value-of select="/ns0:accountEvent/ns0:accountAddress/ns0:region"/>
            </local:region>
          </xsl:otherwise>
        </xsl:choose>
        <local:localAccountName>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:localAccountName"/>
        </local:localAccountName>
        <xsl:choose>
          <xsl:when test="$addCnt > 1.0">
            <xsl:for-each select="/ns0:accountEvent/ns0:accountAddress">
              <xsl:if test="ns0:id = ns0:accountPrimaryAddressId">
                <local:localStreet>
                  <xsl:value-of select="ns0:localStreet"/>
                </local:localStreet>
              </xsl:if>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <local:localStreet>
              <xsl:value-of select="/ns0:accountEvent/ns0:accountAddress/ns0:localStreet"/>
            </local:localStreet>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$addCnt > 1.0">
            <xsl:for-each select="/ns0:accountEvent/ns0:accountAddress">
              <xsl:if test="ns0:id = ns0:accountPrimaryAddressId">
                <local:localCity>
                  <xsl:value-of select="ns0:localCity"/>
                </local:localCity>
              </xsl:if>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <local:localCity>
              <xsl:value-of select="/ns0:accountEvent/ns0:accountAddress/ns0:localCity"/>
            </local:localCity>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$addCnt > 1.0">
            <xsl:for-each select="/ns0:accountEvent/ns0:accountAddress">
              <xsl:if test="ns0:id = ns0:accountPrimaryAddressId">
                <local:localState>
                  <xsl:value-of select="ns0:localState"/>
                </local:localState>
              </xsl:if>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <local:localState>
              <xsl:value-of select="/ns0:accountEvent/ns0:accountAddress/ns0:localState"/>
            </local:localState>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$addCnt > 1.0">
            <xsl:for-each select="/ns0:accountEvent/ns0:accountAddress">
              <xsl:if test="ns0:id = ns0:accountPrimaryAddressId">
                <local:localCountry>
                  <xsl:value-of select="ns0:localCountry"/>
                </local:localCountry>
              </xsl:if>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <local:localCountry>
              <xsl:value-of select="/ns0:accountEvent/ns0:accountAddress/ns0:localCountry"/>
            </local:localCountry>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="$addCnt > 1.0">
            <xsl:for-each select="/ns0:accountEvent/ns0:accountAddress">
              <xsl:if test="ns0:id = ns0:accountPrimaryAddressId">
                <local:localPostal>
                  <xsl:value-of select="ns0:localPostalCode"/>
                </local:localPostal>
              </xsl:if>
            </xsl:for-each>
          </xsl:when>
          <xsl:otherwise>
            <local:localPostal>
              <xsl:value-of select="/ns0:accountEvent/ns0:accountAddress/ns0:localPostalCode"/>
            </local:localPostal>
          </xsl:otherwise>
        </xsl:choose>
        <local:MCCCode>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:accountFamily"/>
        </local:MCCCode>
        <local:businessChannel>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:businessChannel"/>
        </local:businessChannel>
        <local:relationshipModel>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:RelationShipModel"/>
        </local:relationshipModel>
        <local:AgreementNumber>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:trscFields/ns0:AgreementNumber"/>
        </local:AgreementNumber>
        <local:AgreementStatus>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:trscFields/ns0:AgreementStatus"/>
        </local:AgreementStatus>
        <local:AgreementType>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:ContractType"/>
        </local:AgreementType>
        <local:TDOStatus>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:TDOStatus"/>
        </local:TDOStatus>
        <local:SiebelParentAccount>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:parentAccountId"/>
        </local:SiebelParentAccount>
        <local:SiebelUltimateParentAccount>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:masterAccountId"/>
        </local:SiebelUltimateParentAccount>
        <local:LegalEntity>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:legalEntityFlag"/>
        </local:LegalEntity>
        <local:SiebelCustomerNumber>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:customerReferenceNumber"/>
        </local:SiebelCustomerNumber>
        <local:TDOCheckDate>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:TDOCheckDate"/>
        </local:TDOCheckDate>
        <local:CreditCheckStatus>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:CreditCheckStatus"/>
        </local:CreditCheckStatus>
        <local:CreditCheckDate>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:CreditCheckDate"/>
        </local:CreditCheckDate>
        <local:AccountTypeCode>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:AccountTypeCode"/>
        </local:AccountTypeCode>
        <xsl:choose>
          <xsl:when test='/ns0:accountEvent/ns0:actionCode = "Delete"'>
            <local:siebelAccountStatus>
              <xsl:value-of select='string("InActive")'/>
            </local:siebelAccountStatus>
          </xsl:when>
          <xsl:otherwise>
            <local:siebelAccountStatus>
              <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:siebelAccountStatus"/>
            </local:siebelAccountStatus>
          </xsl:otherwise>
        </xsl:choose>
        <local:CustomerJourney>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:customerJourney"/>
        </local:CustomerJourney>
        <local:TCID>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:TCId"/>
        </local:TCID>
        <local:ISPrimaryAccount>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:primaryAccountFlag"/>
        </local:ISPrimaryAccount>
        <local:NomCustomerGroup>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:customerGroup"/>
        </local:NomCustomerGroup>
        <local:oaid>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:oaid"/>
        </local:oaid>
        <local:KNOwned>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:KNOwned"/>
        </local:KNOwned>
        <local:AccountSubscriberData>
          <local:SubscriberNumber>
            <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:subscriberNumber"/>
          </local:SubscriberNumber>
        </local:AccountSubscriberData>
        <local:GlobalUltimateParent>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:globalUltimateParentType"/>
        </local:GlobalUltimateParent>
        <local:BillingFrequency>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:billingFrequency"/>
        </local:BillingFrequency>
        <local:BillingLanguage>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:billingLanguage"/>
        </local:BillingLanguage>
        <local:HierarchyType>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:accountClass"/>
        </local:HierarchyType>
        <local:InternalAccFlag>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:internalAccountFlag"/>
        </local:InternalAccFlag>
        <local:ParentANumber>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:parentCustomerReferenceNumber"/>
        </local:ParentANumber>
        <local:SoftDollarCode>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:softDollarCode"/>
        </local:SoftDollarCode>
        <local:SubAccNumber>
          <xsl:value-of select="/ns0:accountEvent/ns0:account/ns0:subAccountNumber"/>
        </local:SubAccNumber>
      </local:account>
      <xsl:for-each select="/ns0:accountEvent/ns0:employee">
        <local:AccountTeamData>
          <local:email>
            <xsl:value-of select="ns0:activeEmail"/>
          </local:email>
          <local:lastName>
            <xsl:value-of select="ns0:activeLastName"/>
          </local:lastName>
          <local:FirstName>
            <xsl:value-of select="ns0:activeFirstName"/>
          </local:FirstName>
          <local:PositionType>
            <xsl:value-of select="ns0:positionType"/>
          </local:PositionType>
          <local:Role>
            <xsl:value-of select="ns0:role"/>
          </local:Role>
        </local:AccountTeamData>
      </xsl:for-each>
    </local:accountPubRequest>
  </xsl:template>
</xsl:stylesheet>
