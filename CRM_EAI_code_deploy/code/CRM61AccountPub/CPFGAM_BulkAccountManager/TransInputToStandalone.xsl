<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="SIEBELACCOUNTSTG_table.xsd"/>
      <rootElement name="SiebelAccountStgCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/SIEBELACCOUNTSTG"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="CPFGAM_BulkAccountManager.xsd"/>
      <rootElement name="StandaloneAccountCollection" namespace=""/>
      <rootElementDatatype name="AccountCollection" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/CPFG/AM/CPFGAM_BulkAccountManager"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [THU DEC 10 22:42:49 GMT 2009]. -->
?>
<xsl:stylesheet version="1.0" xmlns:ns2="http://www.reuters.com/ns/2007/09/01/GCAP/CPFG/AccountPublish" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/top/SIEBELACCOUNTSTG" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ns1="http://www.reuters.com/ns/2007/09/01/GCAP/CPFG/AM/CPFGAM_BulkAccountManager" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" exclude-result-prefixes="xsl xs ns0 ns2 ns1 bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
  <xsl:template match="/">
    <StandaloneAccountCollection>
      <xsl:for-each select="/ns0:SiebelAccountStgCollection/ns0:SiebelAccountStg">
        <xsl:if test="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CPFGAM_AccountTypeFilterMap.dvm&quot;,&quot;HIERARCHY_TYPE&quot;,ns0:accountXAccClass,&quot;SEND_TO_CPFG&quot;,&quot;NO&quot;) = &quot;YES&quot;">
          <ns1:standaloneAccountEvent>
            <ns2:eaiHeader>
              <ns2:applicationId>
                <xsl:text disable-output-escaping="no">EAI</xsl:text>
              </ns2:applicationId>
              <ns2:transactionId>
                <xsl:value-of select="substring(orcl:generate-guid(),1.0,30.0)"/>
              </ns2:transactionId>
              <ns2:messageId>
                <xsl:value-of select="substring(orcl:generate-guid(),1,30)"/>
              </ns2:messageId>
              <ns2:messageHistory>
                <xsl:text disable-output-escaping="no">CRM;EAI</xsl:text>
              </ns2:messageHistory>
              <ns2:tracingId>
                <xsl:text disable-output-escaping="no">0</xsl:text>
              </ns2:tracingId>
              <ns2:timeStamp>
                <xsl:value-of select="xp20:current-dateTime()"/>
              </ns2:timeStamp>
              <ns2:instanceId>
                <xsl:text disable-output-escaping="no">0</xsl:text>
              </ns2:instanceId>
              <ns2:timeToLive>
                <xsl:text disable-output-escaping="no">0</xsl:text>
              </ns2:timeToLive>
              <ns2:payloadVersion>
                <xsl:text disable-output-escaping="no">1.0</xsl:text>
              </ns2:payloadVersion>
            </ns2:eaiHeader>
            <ns2:actionCode>
              <xsl:text disable-output-escaping="no">Update</xsl:text>
            </ns2:actionCode>
            <ns2:account>
              <ns2:accountID>
                <xsl:value-of select="ns0:accountRowId"/>
              </ns2:accountID>
              <ns2:parentAccountID>
                <xsl:value-of select="ns0:accountParOuId"/>
              </ns2:parentAccountID>
              <ns2:hierarchyType>
                <xsl:value-of select="ns0:accountXAccClass"/>
              </ns2:hierarchyType>
              <ns2:accountName>
                <xsl:value-of select="ns0:accountName"/>
              </ns2:accountName>
              <ns2:address>
                <ns2:city>
                  <xsl:value-of select="ns0:addressCity"/>
                </ns2:city>
                <ns2:name>
                  <xsl:value-of select="ns0:accountName"/>
                </ns2:name>
                <ns2:country>
                  <xsl:value-of select="ns0:addressCountry"/>
                </ns2:country>
                <xsl:choose>
                  <xsl:when test="ns0:addressXFloor = &quot;&quot;">
                    <ns2:streetAddress>
                      <xsl:value-of select="ns0:addressAddr"/>
                    </ns2:streetAddress>
                  </xsl:when>
                  <xsl:otherwise>
                    <ns2:streetAddress>
                      <xsl:value-of select="concat(ns0:addressXFloor,&quot; &quot;,ns0:addressAddr)"/>
                    </ns2:streetAddress>
                  </xsl:otherwise>
                </xsl:choose>
              </ns2:address>
              <ns2:site>
                <xsl:value-of select="ns0:accountLoc"/>
              </ns2:site>
            </ns2:account>
          </ns1:standaloneAccountEvent>
        </xsl:if>
      </xsl:for-each>
      <ns1:instanceID>
        <xsl:text disable-output-escaping="no">' '</xsl:text>
      </ns1:instanceID>
    </StandaloneAccountCollection>
  </xsl:template>
</xsl:stylesheet>
