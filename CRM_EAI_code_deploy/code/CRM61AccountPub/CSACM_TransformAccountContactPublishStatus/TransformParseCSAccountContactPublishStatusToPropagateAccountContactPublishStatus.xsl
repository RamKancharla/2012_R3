<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="http://eaidev2:7777/ParseCSAccountContactPublishStatus/ParseAccountContactPublishStatus?WSDL"/>
      <rootElement name="CSAccountContactPublish" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CS/ACM/AccountContactPublish"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="http://eaidev2:7777/orabpel/ccrmasync/CCRMACM_PropagateAccountContactPublishStatus/EAI.MSG.CS.ACM.234_AccountContactStatus.xsd"/>
      <rootElement name="CSAccountContactStatus" namespace="http://www.reuters.com/NS/2007/01/25/GCAP/EAI/CS/ACM/AccountContactPublish"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [THU SEP 25 20:53:05 BST 2008]. -->
?>
<xsl:stylesheet version="1.0" xmlns:gcap-cmt="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:gcap-cut="http://www.reuters.com/ns/2007/09/01/GCAP/CommonUserTypes" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:tns="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CS/ACM/AccountContactPublish" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:gcap-NUT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableUserTypes" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:xsdLocal="http://www.reuters.com/NS/2007/01/25/GCAP/EAI/CS/ACM/AccountContactPublish" xmlns:nxsd="http://xmlns.oracle.com/pcbpel/nxsd" xmlns:gcap-NAT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableAccountTypes" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:gcap-sa="http://www.reuters.com/ns/2007/09/01/GCAP/SchemaAnnotations" xmlns:gcap-cat="http://www.reuters.com/ns/2007/09/01/GCAP/CommonAccountTypes" exclude-result-prefixes="xsl tns xsd gcap-sa gcap-cmt gcap-cut gcap-NUT xsdLocal gcap-NAT gcap-cat bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
  <xsl:template match="/">
    <xsdLocal:CSAccountContactStatus>
      <xsdLocal:eaiHeader>
        <gcap-cmt:applicationId>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:eaiHeader/tns:applicationId"/>
        </gcap-cmt:applicationId>
        <gcap-cmt:transactionId>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:eaiHeader/tns:transactionId"/>
        </gcap-cmt:transactionId>
        <gcap-cmt:messageId>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:eaiHeader/tns:messageId"/>
        </gcap-cmt:messageId>
        <gcap-cmt:messageHistory>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:eaiHeader/tns:messageHistory"/>
        </gcap-cmt:messageHistory>
        <gcap-cmt:tracingId>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:eaiHeader/tns:tracingId"/>
        </gcap-cmt:tracingId>
        <gcap-cmt:timeStamp>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:eaiHeader/tns:timeStamp"/>
        </gcap-cmt:timeStamp>
        <gcap-cmt:instanceId>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:eaiHeader/tns:instanceId"/>
        </gcap-cmt:instanceId>
        <gcap-cmt:timeToLive>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:eaiHeader/tns:timeToLive"/>
        </gcap-cmt:timeToLive>
        <gcap-cmt:payloadVersion>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:eaiHeader/tns:payloadVersion"/>
        </gcap-cmt:payloadVersion>
      </xsdLocal:eaiHeader>
      <xsdLocal:logicalCountry>
        <xsl:value-of select="/tns:CSAccountContactPublish/tns:logicalCountry"/>
      </xsdLocal:logicalCountry>
      <xsdLocal:messageHeader>
        <gcap-cmt:messageId>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:messageHeader/tns:messageId"/>
        </gcap-cmt:messageId>
        <gcap-cmt:transactionId>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:messageHeader/tns:transactionId"/>
        </gcap-cmt:transactionId>
        <gcap-cmt:messageHistory>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:messageHeader/tns:messageHistory"/>
        </gcap-cmt:messageHistory>
        <gcap-cmt:tracingId>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:messageHeader/tns:tracingId"/>
        </gcap-cmt:tracingId>
        <gcap-cmt:messageCode>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:messageHeader/tns:messageCode"/>
        </gcap-cmt:messageCode>
        <gcap-cmt:version>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:messageHeader/tns:version"/>
        </gcap-cmt:version>
        <gcap-cmt:timeStamp>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:messageHeader/tns:timeStamp"/>
        </gcap-cmt:timeStamp>
        <gcap-cmt:userId>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:messageHeader/tns:userId"/>
        </gcap-cmt:userId>
        <gcap-cmt:objectSystem>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:messageHeader/tns:objectSystem"/>
        </gcap-cmt:objectSystem>
      </xsdLocal:messageHeader>
      <xsdLocal:messageStatus>
        <xsl:value-of select="/tns:CSAccountContactPublish/tns:subMessageStatus"/>
      </xsdLocal:messageStatus>
      <xsdLocal:accountRequestStatus>
        <xsl:value-of select="/tns:CSAccountContactPublish/tns:subHeaderMessageId"/>
      </xsdLocal:accountRequestStatus>
      <xsl:choose>
        <xsl:when test="(/tns:CSAccountContactPublish/tns:messageHeader/tns:messageCode = &quot;SM05&quot;) and ((/tns:CSAccountContactPublish/tns:subMessageStatus = &quot;0&quot;) and ((/tns:CSAccountContactPublish/tns:subHeaderMessageId = &quot;B000&quot;) or (/tns:CSAccountContactPublish/tns:subHeaderMessageId = &quot;C000&quot;)))">
          <xsdLocal:accountRowId>
            <xsl:value-of select="xref:populateXRefRow(&quot;oramds:/apps/EAIMetaData/Xref/CRMACCOUNTID_CSSUBSCRIBERNUMBER.xref&quot;,&quot;CSSUBSCRIBERNUMBER&quot;,concat(orcl:right-trim(/tns:CSAccountContactPublish/tns:subscriberAccountData/tns:subscriberNumber),orcl:right-trim(/tns:CSAccountContactPublish/tns:installationAddress/tns:InstallAddressAcctId),orcl:right-trim(/tns:CSAccountContactPublish/tns:logicalCountry)),&quot;CRMACCOUNTID&quot;,orcl:right-trim(/tns:CSAccountContactPublish/tns:subRowId),&quot;ADD&quot;)"/>
          </xsdLocal:accountRowId>
        </xsl:when>
        <xsl:otherwise>
          <xsdLocal:accountRowId>
            <xsl:value-of select="/tns:CSAccountContactPublish/tns:subRowId"/>
          </xsdLocal:accountRowId>
        </xsl:otherwise>
      </xsl:choose>
      <xsdLocal:account>
        <xsdLocal:subscriberNumber>
          <xsl:value-of select="concat(dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CountryISOCodeToCSCode.dvm&quot;,&quot;CSCountryCode&quot;,substring(/tns:CSAccountContactPublish/tns:subscriberAccountData/tns:subscriberNumber,1.0,2.0),&quot;ISOCountryCode&quot;,substring(/tns:CSAccountContactPublish/tns:subscriberAccountData/tns:subscriberNumber,1.0,2.0)),substring(/tns:CSAccountContactPublish/tns:subscriberAccountData/tns:subscriberNumber,3.0,5.0))"/>
        </xsdLocal:subscriberNumber>
        <xsdLocal:subscriberRequestStatus>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:subscriberAccountData/tns:subscriberMessageId"/>
        </xsdLocal:subscriberRequestStatus>
      </xsdLocal:account>
      <xsdLocal:installationAddress>
        <xsdLocal:subAccountNumber>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:installationAddress/tns:InstallAddressAcctId"/>
        </xsdLocal:subAccountNumber>
        <xsdLocal:InstallAddressRequestStatus>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:installationAddress/tns:InstallAddressMessageId"/>
        </xsdLocal:InstallAddressRequestStatus>
      </xsdLocal:installationAddress>
      <xsdLocal:billingAddress>
        <xsdLocal:subAccountNumber>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:billingAddress/tns:BillingAddressAcctId"/>
        </xsdLocal:subAccountNumber>
        <xsdLocal:BillingAddressRequestStatus>
          <xsl:value-of select="/tns:CSAccountContactPublish/tns:billingAddress/tns:BillingMessageId"/>
        </xsdLocal:BillingAddressRequestStatus>
      </xsdLocal:billingAddress>
      <xsl:for-each select="/tns:CSAccountContactPublish/tns:contactData">
        <xsl:choose>
          <xsl:when test="(orcl:left-trim(tns:ContactPersonId) != &quot;&quot;) and ((../tns:subMessageStatus = &quot;0&quot;) and ((../tns:subHeaderMessageId = &quot;A000&quot;) or (../tns:subHeaderMessageId = &quot;B000&quot;)))">
            <xsdLocal:contact>
              <xsdLocal:ContactRowId>
                <xsl:value-of select="tns:ContactRowId"/>
              </xsdLocal:ContactRowId>
              <xsdLocal:ContactPersonId>
                <xsl:value-of select="xref:populateXRefRow(&quot;oramds:/apps/EAIMetaData/Xref/CRMCONTACTID_CSPERSONID.xref&quot;,&quot;CRMCONTACTID&quot;,concat(../tns:logicalCountry,orcl:right-trim(tns:ContactRowId)),&quot;CSPERSONID&quot;,concat(../tns:logicalCountry,tns:ContactPersonId),&quot;ADD&quot;)"/>
              </xsdLocal:ContactPersonId>
              <xsdLocal:ContactType>
                <xsl:value-of select="tns:ContactType"/>
              </xsdLocal:ContactType>
              <xsdLocal:ContactRequestStatus>
                <xsl:value-of select="tns:ContactMessageId"/>
              </xsdLocal:ContactRequestStatus>
            </xsdLocal:contact>
          </xsl:when>
          <xsl:otherwise>
            <xsdLocal:contact>
              <xsdLocal:ContactRowId>
                <xsl:value-of select="tns:ContactRowId"/>
              </xsdLocal:ContactRowId>
              <xsdLocal:ContactPersonId>
                <xsl:value-of select="tns:ContactPersonId"/>
              </xsdLocal:ContactPersonId>
              <xsdLocal:ContactType>
                <xsl:value-of select="tns:ContactType"/>
              </xsdLocal:ContactType>
              <xsdLocal:ContactRequestStatus>
                <xsl:value-of select="tns:ContactMessageId"/>
              </xsdLocal:ContactRequestStatus>
            </xsdLocal:contact>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
    </xsdLocal:CSAccountContactStatus>
  </xsl:template>
</xsl:stylesheet>
