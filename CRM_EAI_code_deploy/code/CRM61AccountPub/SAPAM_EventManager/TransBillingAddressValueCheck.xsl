<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/EAIMetaData/schemas/EAI.MSG.AM.176_AccountEvent.xsd"/>
      <rootElement name="accountEvent" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/AM/AccountPublish"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="oramds:/apps/EAIMetaData/schemas/EAI.MSG.AM.176_AccountEvent.xsd"/>
      <rootElement name="accountEvent" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/AM/AccountPublish"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.4.0(build 110106.1932.5682) AT [TUE MAR 20 19:35:23 GMT+05:30 2012]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:gcap-cut="http://www.reuters.com/ns/2007/09/01/GCAP/CommonUserTypes"
                xmlns:ns0="http://www.reuters.com/ns/2007/09/01/GCAP/SchemaAnnotations"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:gcap-NAT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableAccountTypes"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:gcap-NUT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableUserTypes"
                xmlns:gcap-cmt="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:local="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/AM/AccountPublish"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:gcap-cat="http://www.reuters.com/ns/2007/09/01/GCAP/CommonAccountTypes"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl gcap-cut ns0 gcap-NAT gcap-NUT gcap-cmt local xsd gcap-cat xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap">
  <xsl:template match="/">
    <local:accountEvent>
      <xsl:for-each select="/local:accountEvent/local:accountAddress">
      <xsl:if test='local:csaddressType = "Billing"'>
        <local:accountAddress>
          <local:faxNumber>
            <xsl:value-of select="local:faxNumber"/>
          </local:faxNumber>
          <local:id>
            <xsl:value-of select="local:id"/>
          </local:id>
          <local:accountId>
            <xsl:value-of select="local:accountId"/>
          </local:accountId>
          <local:accountLoc>
            <xsl:value-of select="local:accountLoc"/>
          </local:accountLoc>
          <local:accountName>
            <xsl:value-of select="local:accountName"/>
          </local:accountName>
          <local:accountPrimaryAddressId>
            <xsl:value-of select="local:accountPrimaryAddressId"/>
          </local:accountPrimaryAddressId>
          <local:activeStatus>
            <xsl:value-of select="local:activeStatus"/>
          </local:activeStatus>
          <local:addrDescription>
            <xsl:value-of select="local:addrDescription"/>
          </local:addrDescription>
          <local:addressId>
            <xsl:value-of select="local:addressId"/>
          </local:addressId>
          <local:addressName>
            <xsl:value-of select="local:addressName"/>
          </local:addressName>
          <local:addressType>
            <xsl:value-of select="local:addressType"/>
          </local:addressType>
          <local:apartmentNumber>
            <xsl:value-of select="local:apartmentNumber"/>
          </local:apartmentNumber>
          <local:billAddressFlag>
            <xsl:value-of select="local:billAddressFlag"/>
          </local:billAddressFlag>
          <local:city>
            <xsl:value-of select="local:city"/>
          </local:city>
          <local:contactId>
            <xsl:value-of select="local:contactId"/>
          </local:contactId>
          <local:country>
            <xsl:value-of select="local:country"/>
          </local:country>
          <local:county>
            <xsl:value-of select="local:county"/>
          </local:county>
          <local:descriptor>
            <xsl:value-of select="local:descriptor"/>
          </local:descriptor>
          <local:emailAddress>
            <xsl:value-of select="local:emailAddress"/>
          </local:emailAddress>
          <local:integrationId>
            <xsl:value-of select="local:integrationId"/>
          </local:integrationId>
          <local:landlordName>
            <xsl:value-of select="local:landlordName"/>
          </local:landlordName>
          <local:landlordPhoneNumber>
            <xsl:value-of select="local:landlordPhoneNumber"/>
          </local:landlordPhoneNumber>
          <local:lastUpdatedConAddr>
            <xsl:value-of select="local:lastUpdatedConAddr"/>
          </local:lastUpdatedConAddr>
          <local:localOperatingCompany>
            <xsl:value-of select="local:localOperatingCompany"/>
          </local:localOperatingCompany>
          <local:localOperatingCompanyId>
            <xsl:value-of select="local:localOperatingCompanyId"/>
          </local:localOperatingCompanyId>
          <local:localOperatingCompanySite>
            <xsl:value-of select="local:localOperatingCompanySite"/>
          </local:localOperatingCompanySite>
          <local:mainAddressFlag>
            <xsl:value-of select="local:mainAddressFlag"/>
          </local:mainAddressFlag>
          <local:parentAddress>
            <xsl:value-of select="local:parentAddress"/>
          </local:parentAddress>
          <local:parentAddressId>
            <xsl:value-of select="local:parentAddressId"/>
          </local:parentAddressId>
          <local:phoneNumber>
            <xsl:value-of select="local:phoneNumber"/>
          </local:phoneNumber>
          <local:postalCode>
            <xsl:value-of select="local:postalCode"/>
          </local:postalCode>
          <local:province>
            <xsl:value-of select="local:province"/>
          </local:province>
          <local:rcrmaddressType>
            <xsl:value-of select="local:rcrmaddressType"/>
          </local:rcrmaddressType>
          <local:csaddressType>
            <xsl:value-of select="local:csaddressType"/>
          </local:csaddressType>
          <local:streetAddress>
            <xsl:value-of select="local:streetAddress"/>
          </local:streetAddress>
          <local:streetAddress2>
            <xsl:value-of select="local:streetAddress2"/>
          </local:streetAddress2>
          <local:rcrmemailAddress>
            <xsl:value-of select="local:rcrmemailAddress"/>
          </local:rcrmemailAddress>
          <local:floorAddress>
            <xsl:value-of select="local:floorAddress"/>
          </local:floorAddress>
          <local:legacyAddressRef>
            <xsl:value-of select="local:legacyAddressRef"/>
          </local:legacyAddressRef>
          <local:legacyFlag>
            <xsl:value-of select="local:legacyFlag"/>
          </local:legacyFlag>
          <local:localStreet>
            <xsl:value-of select="local:localStreet"/>
          </local:localStreet>
          <local:localCity>
            <xsl:value-of select="local:localCity"/>
          </local:localCity>
          <local:localCountry>
            <xsl:value-of select="local:localCountry"/>
          </local:localCountry>
          <local:localPostalCode>
            <xsl:value-of select="local:localPostalCode"/>
          </local:localPostalCode>
          <local:localState>
            <xsl:value-of select="local:localState"/>
          </local:localState>
          <local:region>
            <xsl:value-of select="local:region"/>
          </local:region>
          <local:rowId>
            <xsl:value-of select="local:rowId"/>
          </local:rowId>
          <local:sInstance>
            <xsl:value-of select="local:sInstance"/>
          </local:sInstance>
          <local:sInstanceId>
            <xsl:value-of select="local:sInstanceId"/>
          </local:sInstanceId>
          <local:skeyId>
            <xsl:value-of select="local:skeyId"/>
          </local:skeyId>
          <local:state>
            <xsl:value-of select="local:state"/>
          </local:state>
          <local:subRegion>
            <xsl:value-of select="local:subRegion"/>
          </local:subRegion>
          <local:type>
            <xsl:value-of select="local:type"/>
          </local:type>
          <local:verifiedFlag>
            <xsl:value-of select="local:verifiedFlag"/>
          </local:verifiedFlag>
        </local:accountAddress>
        </xsl:if>
      </xsl:for-each>
      </local:accountEvent>
  </xsl:template>
</xsl:stylesheet>
