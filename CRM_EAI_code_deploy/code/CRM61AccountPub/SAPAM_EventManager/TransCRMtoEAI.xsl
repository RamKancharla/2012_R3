<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="EAI.MSG.AM.293_AccountEvent.xsd"/>
      <rootElement name="extendedaccountEvent" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/AM/AccountPublish"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="EAI.MSG.SAP.AM.292_PublishAccount.xsd"/>
      <rootElement name="AccountPublish" namespace="http://www.reuters.com/ns/2010/07/07/SAMI/EAI/AM/AccountPublish"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [TUE JAN 18 13:12:31 GMT+05:30 2011]. -->
?>
<xsl:stylesheet version="1.0" xmlns:sapam="http://www.reuters.com/ns/2010/07/07/SAMI/EAI/AM/AccountPublish" xmlns:gcap-cmt="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:gcap-cut="http://www.reuters.com/ns/2007/09/01/GCAP/CommonUserTypes" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:gcap-NUT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableUserTypes" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:gcap-NAT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableAccountTypes" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:local="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/AM/AccountPublish" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns0="http://www.reuters.com/ns/2007/09/01/GCAP/SchemaAnnotations" xmlns:gcap-cat="http://www.reuters.com/ns/2007/09/01/GCAP/CommonAccountTypes" exclude-result-prefixes="xsl gcap-cmt gcap-cut xsd gcap-NUT gcap-NAT local ns0 gcap-cat sapam bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
  <xsl:template match="/">
    <sapam:AccountPublish>
      <sapam:Accounts>
        <sapam:RCRMFinancialCharges>
          <xsl:value-of select="/local:extendedaccountEvent/local:account/local:RCRMFinancialCharges"/>
        </sapam:RCRMFinancialCharges>
        <xsl:choose>
          <xsl:when test="(/local:extendedaccountEvent/local:account/local:accountClass != &quot;Billing&quot;) and (/local:extendedaccountEvent/local:account/local:accountClass != &quot;Athena&quot;) and (/local:extendedaccountEvent/local:account/local:accountClass != &quot;Wildcat&quot;) and (/local:extendedaccountEvent/local:account/local:accountClass != &quot;Multipub&quot;) and (/local:extendedaccountEvent/local:account/local:accountClass != &quot;MOPS&quot;) and (/local:extendedaccountEvent/local:account/local:accountClass != &quot;Peoplesoft&quot;) and (/local:extendedaccountEvent/local:account/local:accountClass != &quot;Bridge&quot;)">
            <sapam:vatCode>
              <xsl:value-of select="/local:extendedaccountEvent/local:account/local:vatCode"/>
            </sapam:vatCode>
          </xsl:when>
        </xsl:choose>
        <sapam:payTerms>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMPaymentTerms.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:payTerms,&quot;SAP&quot;,/local:extendedaccountEvent/local:account/local:payTerms)"/>
        </sapam:payTerms>
        <sapam:Name>
          <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:name,1.0,40.0)"/>
        </sapam:Name>
        <sapam:Name1>
          <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:name,41.0,40.0)"/>
        </sapam:Name1>
        <sapam:Name2>
          <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:name,81.0,40.0)"/>
        </sapam:Name2>
        <sapam:Name3>
          <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:name,121.0,40.0)"/>
        </sapam:Name3>
        <sapam:PhoneNumber>
          <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:phoneNumber,1.0,30.0)"/>
        </sapam:PhoneNumber>
        <sapam:CustomerRefereceNumber>
          <xsl:value-of select="/local:extendedaccountEvent/local:account/local:customerReferenceNumber"/>
        </sapam:CustomerRefereceNumber>
        <xsl:choose>
          <xsl:when test="/local:extendedaccountEvent/local:account/local:legalEntityFlag = &quot;Y&quot;">
            <sapam:AccountClass>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMAccountClass.dvm&quot;,&quot;SIEBEL&quot;,&quot;Legal Entity&quot;,&quot;SAP&quot;,/local:extendedaccountEvent/local:account/local:accountClass)"/>
            </sapam:AccountClass>
          </xsl:when>        
          <xsl:when test="(/local:extendedaccountEvent/local:account/local:legalEntityFlag != &quot;Y&quot;) and (/local:extendedaccountEvent/local:account/local:accountClass = &quot;Location&quot;)">
            <sapam:AccountClass>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMAccountClass.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:accountClass,&quot;SAP&quot;,/local:extendedaccountEvent/local:account/local:accountClass)"/>
            </sapam:AccountClass>
          </xsl:when>
          <xsl:otherwise>
            <sapam:AccountClass>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMAccountClass.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:accountClass,&quot;SAP&quot;,/local:extendedaccountEvent/local:account/local:accountClass)"/>
             </sapam:AccountClass>
          </xsl:otherwise>
        </xsl:choose>
        <sapam:BillingCurrency>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMCurrency.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:billingCurrency,&quot;SAP&quot;,/local:extendedaccountEvent/local:account/local:billingCurrency)"/>
        </sapam:BillingCurrency>
        <sapam:BillingFrequency>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMBillingFrequency.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:billingFrequency,&quot;SAP&quot;,/local:extendedaccountEvent/local:account/local:billingFrequency)"/>
        </sapam:BillingFrequency>
        <sapam:AccountStatus>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMAccountStatus.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:accountStatus,&quot;SAP&quot;,&quot;&quot;)"/>
        </sapam:AccountStatus>
        <sapam:ParentCustRefereceNumber>
          <xsl:value-of select="/local:extendedaccountEvent/local:account/local:parentCustomerReferenceNumber"/>
        </sapam:ParentCustRefereceNumber>
        <sapam:AccountFamily>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMAccountFamily.dvm&quot;,&quot;SIEBEL&quot;,substring(/local:extendedaccountEvent/local:account/local:accountFamily,3.0,string-length(/local:extendedaccountEvent/local:account/local:accountFamily)),&quot;SAP&quot;,&quot;&quot;)"/>
        </sapam:AccountFamily>
        <sapam:InvoiceDeliveryMethod>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMInvoiceDeliveryVariant.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:invoiceDeliveryMethod,&quot;SAPInvoice&quot;,/local:extendedaccountEvent/local:account/local:invoiceDeliveryMethod)"/>
        </sapam:InvoiceDeliveryMethod>
        <sapam:HardCopyDispMethod>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMHardcopyDispatch.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:hardcopyDispatchMethod,&quot;SAP&quot;,/local:extendedaccountEvent/local:account/local:hardcopyDispatchMethod)"/>
        </sapam:HardCopyDispMethod>
        <sapam:ExtBillingAcc>
          <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:extBillingAccountDesc,1.0,40.0)"/>
        </sapam:ExtBillingAcc>
        <sapam:SoftDollarCode>
          <xsl:value-of select="/local:extendedaccountEvent/local:account/local:softDollarCode"/>
        </sapam:SoftDollarCode>
        <sapam:ContractType>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMContractType.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:ContractType,&quot;SAP&quot;,/local:extendedaccountEvent/local:account/local:ContractType)"/>
        </sapam:ContractType>
        <sapam:TRSCAgreementType>
          <xsl:value-of select="/local:extendedaccountEvent/local:account/local:trscAgreementNumber"/>
        </sapam:TRSCAgreementType>
        <sapam:LegalEntityFlag>
          <xsl:value-of select="/local:extendedaccountEvent/local:account/local:legalEntityFlag"/>
        </sapam:LegalEntityFlag>
        <sapam:BusinessChannel>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMBusinessChannel.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:businessChannel,&quot;SAP&quot;,/local:extendedaccountEvent/local:account/local:businessChannel)"/>
        </sapam:BusinessChannel>
        <sapam:IndustryType_SubType>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMIndustryCode.dvm&quot;,&quot;SIEBEL&quot;,concat(/local:extendedaccountEvent/local:account/local:trbcFields/local:industryType,/local:extendedaccountEvent/local:account/local:trbcFields/local:industrySubType),&quot;SAP&quot;,&quot;&quot;)"/>
        </sapam:IndustryType_SubType>
        <sapam:BillingLanguageDesc>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMBillingLanguage.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:billingLanguage,&quot;SAP&quot;,/local:extendedaccountEvent/local:account/local:billingLanguage)"/>
        </sapam:BillingLanguageDesc>
        <sapam:FaxNumber>
          <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:faxNumber,1.0,30.0)"/>
        </sapam:FaxNumber>
        <sapam:PriceList>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMPriceList.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:primaryAccountCountry,&quot;SAP&quot;,/local:extendedaccountEvent/local:account/local:primaryAccountCountry)"/>
        </sapam:PriceList>
        <sapam:CorrespondenceVariant>
          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMInvoiceDeliveryVariant.dvm&quot;,&quot;SIEBEL&quot;,/local:extendedaccountEvent/local:account/local:invoiceDeliveryMethod,&quot;SAPCorrespondenceVar&quot;,/local:extendedaccountEvent/local:account/local:invoiceDeliveryMethod)"/>
        </sapam:CorrespondenceVariant>
        <xsl:choose>
          <xsl:when test="/local:extendedaccountEvent/local:account/local:urgentBillingFlag != &quot;Y&quot;">
            <sapam:UrgentBillingFlag/>
          </xsl:when>
          <xsl:otherwise>
            <sapam:UrgentBillingFlag>
              <xsl:value-of select="/local:extendedaccountEvent/local:account/local:urgentBillingFlag"/>
            </sapam:UrgentBillingFlag>
          </xsl:otherwise>
        </xsl:choose>
        <!--<sapam:LoginId>
          <xsl:value-of select="/local:extendedaccountEvent/local:employee/local:activeLoginId"/>
        </sapam:LoginId> -->
      </sapam:Accounts>
      <xsl:for-each select="/local:extendedaccountEvent/local:employee">
        <xsl:if test="local:publishContactToSAP = &quot;Y&quot;">
          <sapam:Position>
            <sapam:publishContactToSAP>
              <xsl:value-of select="local:publishContactToSAP"/>
            </sapam:publishContactToSAP>
            <sapam:ActiveFName>
              <xsl:value-of select="local:activeFirstName"/>
            </sapam:ActiveFName>
            <sapam:ActiveLName>
              <xsl:value-of select="local:activeLastName"/>
            </sapam:ActiveLName>
            <sapam:ActiveMM>
              <xsl:value-of select="local:activeMM"/>
            </sapam:ActiveMM>
            <sapam:EMAIL>
              <xsl:value-of select="local:activeEmail"/>
            </sapam:EMAIL>
            <sapam:TELEPHONE>
              <xsl:value-of select="substring(local:contactWorkNumber,1.0,30.0)"/>
            </sapam:TELEPHONE>
            <sapam:Position_Street>
              <xsl:value-of select="substring(local:contactAddress,1.0,60.0)"/>
            </sapam:Position_Street>
            <sapam:Position_Street1>
              <xsl:value-of select="substring(local:contactAddress,61.0,60.0)"/>
            </sapam:Position_Street1>
            <sapam:Position_Street2>
              <xsl:value-of select="substring(local:contactAddress,121.0,60.0)"/>
            </sapam:Position_Street2>
            <sapam:Position_Street3>
              <xsl:value-of select="substring(local:contactAddress,181.0,60.0)"/>
            </sapam:Position_Street3>
            <sapam:PostalCode>
              <xsl:value-of select="substring(local:contactPostalCode,1.0,10.0)"/>
            </sapam:PostalCode>
            <sapam:City>
              <xsl:value-of select="substring(local:contactCity,1.0,40.0)"/>
            </sapam:City>
            <sapam:Country>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMCountryCodes.dvm&quot;,&quot;SIEBEL&quot;,local:contactCountry,&quot;SAP&quot;,local:contactCountry)"/>
            </sapam:Country>
            <sapam:State>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMRegions.dvm&quot;,&quot;SIEBEL&quot;,local:contactState,&quot;SAP&quot;,&quot;&quot;)"/>
            </sapam:State>
            <sapam:LoginName>
              <xsl:value-of select="local:activeLoginName"/>
            </sapam:LoginName>
            <sapam:PositionType>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMFunction.dvm&quot;,&quot;SIEBEL&quot;,local:positionType,&quot;SAP&quot;,&quot;03&quot;)"/>
            </sapam:PositionType>
            <sapam:FaxNum>
              <xsl:value-of select="substring(local:contactFaxNumber,1.0,30.0)"/>
            </sapam:FaxNum>
            <sapam:LoginId>
              <xsl:value-of select="local:activeLoginId"/>
            </sapam:LoginId>
          </sapam:Position>
        </xsl:if>
      </xsl:for-each>
      <xsl:for-each select="/local:extendedaccountEvent/local:accountAddress">
        <xsl:if test="((../local:account/local:accountClass = &quot;Location&quot;) and (local:accountPrimaryAddressId = local:id)) or ((../local:account/local:accountClass != &quot;Location&quot;) and (local:csaddressType = &quot;Billing&quot;))">
          <sapam:Address>
            <sapam:FloorAddress>
              <xsl:value-of select="local:floorAddress"/>
            </sapam:FloorAddress>
            <sapam:AddressName_Street>
              <xsl:value-of select="substring(local:streetAddress,1.0,60.0)"/>
            </sapam:AddressName_Street>
            <sapam:AddressName_Street1>
              <xsl:value-of select="substring(local:streetAddress,61.0,60.0)"/>
            </sapam:AddressName_Street1>
            <sapam:AddressName_Street2>
              <xsl:value-of select="substring(local:streetAddress,121.0,60.0)"/>
            </sapam:AddressName_Street2>
            <sapam:AddressName_Street3>
              <xsl:value-of select="substring(local:streetAddress,181.0,60.0)"/>
            </sapam:AddressName_Street3>
            <sapam:PostalCode>
              <xsl:value-of select="substring(local:postalCode,1.0,10.0)"/>
            </sapam:PostalCode>
            <sapam:City>
              <xsl:value-of select="substring(local:city,1.0,40.0)"/>
            </sapam:City>
            <xsl:choose>
              <xsl:when test="(local:country = &quot;United Kingdom&quot;) and ((local:state = &quot;Jersey&quot;) or (local:state = &quot;Guernsey&quot;) or (local:state = &quot;Isle Of Man&quot;))">
                <sapam:Country>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMCountryCodes.dvm&quot;,&quot;SIEBEL&quot;,local:state,&quot;SAP&quot;,local:state)"/>
                </sapam:Country>
                </xsl:when>
                <xsl:otherwise>
                <sapam:Country>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMCountryCodes.dvm&quot;,&quot;SIEBEL&quot;,local:country,&quot;SAP&quot;,local:country)"/>
            </sapam:Country>
              </xsl:otherwise>
            </xsl:choose>
            <xsl:choose>
              <xsl:when test="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMCountryCodes.dvm&quot;,&quot;SIEBEL&quot;,local:country,&quot;PopulateSAPRegion&quot;,&quot;N&quot;)= &quot;Y&quot;">
              <xsl:choose>
                <xsl:when test="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMRegions.dvm&quot;,&quot;SIEBEL&quot;,concat(local:state,&quot; &quot;,local:country),&quot;SAP&quot;,&quot;&quot;)!=&quot;&quot;">
            <sapam:State>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMRegions.dvm&quot;,&quot;SIEBEL&quot;,concat(local:state,&quot; &quot;,local:country),&quot;SAP&quot;,&quot;&quot;)"/>
            </sapam:State>
                </xsl:when>
                <xsl:otherwise>
                <sapam:State>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMRegions.dvm&quot;,&quot;SIEBEL&quot;,local:state,&quot;SAP&quot;,&quot;&quot;)"/>
                </sapam:State>
                </xsl:otherwise>
                </xsl:choose>
              </xsl:when>
              <xsl:otherwise>
                <sapam:State>
                  <xsl:value-of select="string(&quot;&quot;)"/>
                </sapam:State>
              </xsl:otherwise>
            </xsl:choose>
          </sapam:Address>
        </xsl:if>
      </xsl:for-each>
      <xsl:choose>
        <xsl:when test="(/local:extendedaccountEvent/local:publishAccountToSAP = &quot;Y&quot;) and (/local:extendedaccountEvent/local:account/local:SAPPublishedFlag = &quot;N&quot;)">
          <sapam:ActionCode>
            <xsl:value-of select="string(&quot;Create&quot;)"/>
          </sapam:ActionCode>
        </xsl:when>
        <xsl:when test="(/local:extendedaccountEvent/local:publishAccountToSAP = &quot;Y&quot;) and (/local:extendedaccountEvent/local:account/local:SAPPublishedFlag = &quot;Y&quot;)">
          <sapam:ActionCode>
            <xsl:value-of select="string(&quot;Update&quot;)"/>
          </sapam:ActionCode>
        </xsl:when>
        <xsl:otherwise>
          <sapam:ActionCode>
            <xsl:value-of select="/local:extendedaccountEvent/local:actionCode"/>
          </sapam:ActionCode>
        </xsl:otherwise>
      </xsl:choose>
      <sapam:Id>
        <xsl:value-of select="/local:extendedaccountEvent/local:account/local:id"/>
      </sapam:Id>
      <sapam:applicationId>
        <xsl:value-of select="/local:extendedaccountEvent/local:eaiHeader/gcap-cmt:applicationId"/>
      </sapam:applicationId>
      <sapam:instanceId>
        <xsl:value-of select="/local:extendedaccountEvent/local:eaiHeader/gcap-cmt:instanceId"/>
      </sapam:instanceId>
      <sapam:messageId>
        <xsl:value-of select="/local:extendedaccountEvent/local:eaiHeader/gcap-cmt:messageId"/>
      </sapam:messageId>
      <sapam:tracingId>
        <xsl:value-of select="/local:extendedaccountEvent/local:eaiHeader/gcap-cmt:tracingId"/>
      </sapam:tracingId>
      <sapam:transactionId>
        <xsl:value-of select="/local:extendedaccountEvent/local:eaiHeader/gcap-cmt:transactionId"/>
      </sapam:transactionId>
      <sapam:nation>
        <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMNationValue.dvm&quot;,&quot;BillingLanguage&quot;,/local:extendedaccountEvent/local:account/local:billingLanguage,&quot;NationValue&quot;,&quot;&quot;)"/>
      </sapam:nation>
      <sapam:localAccountName>
        <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:localAccountName,1.0,40.0)"/>
      </sapam:localAccountName>
      <sapam:localFloorAddress>
        <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:localFloorAddress,1.0,20.0)"/>
      </sapam:localFloorAddress>
      <sapam:localStreetAddress>
        <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:localStreetAddress,1.0,60.0)"/>
      </sapam:localStreetAddress>
      <sapam:localPostalCode>
        <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:localPostalCodem,1.0,10.0)"/>
      </sapam:localPostalCode>
      <sapam:localCity>
        <xsl:value-of select="substring(/local:extendedaccountEvent/local:account/local:localCity,1.0,40.0)"/>
      </sapam:localCity>
      <sapam:subscriberNumber>
        <xsl:value-of select="/local:extendedaccountEvent/local:account/local:subscriberNumber"/>
      </sapam:subscriberNumber>
      <sapam:subAccountNumber>
        <xsl:value-of select="/local:extendedaccountEvent/local:account/local:subAccountNumber"/>
      </sapam:subAccountNumber>
      <sapam:salesOffice>
      <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/SAPAMSalesOffice.dvm&quot;,&quot;Country&quot;,/local:extendedaccountEvent/local:country,&quot;SalesOffice&quot;,&quot;&quot;)"/>
      </sapam:salesOffice>
    </sapam:AccountPublish>
  </xsl:template>
</xsl:stylesheet>
