<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/EAIMetaData/schemas/EAI.MSG.AM.176_AccountEvent.xsd"/>
      <rootElement name="accountEvent" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/AM/AccountPublish"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="EAI.MSG.TOM.AM.179_PublishAccountEventRequest.xsd"/>
      <rootElement name="accountPubRequest" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/TOM/AccountPublish"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [MON AUG 17 13:58:18 BST 2009]. -->
?>
<xsl:stylesheet version="1.0" xmlns:gcap-cmt="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:gcap-cut="http://www.reuters.com/ns/2007/09/01/GCAP/CommonUserTypes" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:gcap-NUT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableUserTypes" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:gcap-NAT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableAccountTypes" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="http://www.reuters.com/ns/2007/09/01/GCAP/TOM/AccountPublish" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:local="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/AM/AccountPublish" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns1="http://www.reuters.com/ns/2007/09/01/GCAP/SchemaAnnotations" xmlns:gcap-cat="http://www.reuters.com/ns/2007/09/01/GCAP/CommonAccountTypes" exclude-result-prefixes="xsl gcap-cmt gcap-cut xsd gcap-NUT gcap-NAT local ns1 gcap-cat ns0 bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
  <xsl:template match="/">
    <ns0:accountPubRequest>
      <ns0:eaiHeader>
        <gcap-cmt:applicationId>
          <xsl:value-of select="/local:accountEvent/local:eaiHeader/gcap-cmt:applicationId"/>
        </gcap-cmt:applicationId>
        <gcap-cmt:transactionId>
          <xsl:value-of select="/local:accountEvent/local:eaiHeader/gcap-cmt:transactionId"/>
        </gcap-cmt:transactionId>
        <gcap-cmt:messageId>
          <xsl:value-of select="/local:accountEvent/local:eaiHeader/gcap-cmt:messageId"/>
        </gcap-cmt:messageId>
        <gcap-cmt:messageHistory>
          <xsl:value-of select="/local:accountEvent/local:eaiHeader/gcap-cmt:messageHistory"/>
        </gcap-cmt:messageHistory>
        <gcap-cmt:tracingId>
          <xsl:value-of select="/local:accountEvent/local:eaiHeader/gcap-cmt:tracingId"/>
        </gcap-cmt:tracingId>
        <gcap-cmt:timeStamp>
          <xsl:value-of select="/local:accountEvent/local:eaiHeader/gcap-cmt:timeStamp"/>
        </gcap-cmt:timeStamp>
        <gcap-cmt:instanceId>
          <xsl:value-of select="/local:accountEvent/local:eaiHeader/gcap-cmt:instanceId"/>
        </gcap-cmt:instanceId>
        <gcap-cmt:timeToLive>
          <xsl:value-of select="/local:accountEvent/local:eaiHeader/gcap-cmt:timeToLive"/>
        </gcap-cmt:timeToLive>
        <gcap-cmt:payloadVersion>
          <xsl:value-of select="/local:accountEvent/local:eaiHeader/gcap-cmt:payloadVersion"/>
        </gcap-cmt:payloadVersion>
      </ns0:eaiHeader>
      <ns0:actionCode>
        <xsl:value-of select="/local:accountEvent/local:actionCode"/>
      </ns0:actionCode>
      <ns0:account>
        <ns0:accountID>
          <xsl:value-of select="/local:accountEvent/local:account/local:id"/>
        </ns0:accountID>
        
          <ns0:parentAccountID>
            <xsl:value-of select="/local:accountEvent/local:account/local:parentAccountId"/>
          </ns0:parentAccountID>

        <ns0:masterAccountID>
          <xsl:value-of select="/local:accountEvent/local:account/local:masterAccountId"/>
        </ns0:masterAccountID>
        <ns0:hierarchyType>
          <xsl:value-of select="/local:accountEvent/local:account/local:accountClass"/>
        </ns0:hierarchyType>
        <ns0:accountName>
          <xsl:value-of select="/local:accountEvent/local:account/local:name"/>
        </ns0:accountName>
        <xsl:for-each select="/local:accountEvent/local:accountAddress">
          <ns0:address>
            <ns0:city>
              <xsl:value-of select="local:city"/>
            </ns0:city>
            <ns0:mainFaxNumber>
              <xsl:value-of select="local:faxNumber"/>
            </ns0:mainFaxNumber>
            <ns0:mainTelephoneNumber>
              <xsl:value-of select="local:phoneNumber"/>
            </ns0:mainTelephoneNumber>
            <ns0:name>
              <xsl:value-of select="local:addressName"/>
            </ns0:name>
            <ns0:postalCode>
              <xsl:value-of select="local:postalCode"/>
            </ns0:postalCode>
            <ns0:stateProvinceCounty>
              <xsl:value-of select="local:state"/>
            </ns0:stateProvinceCounty>
            <ns0:country>
              <xsl:value-of select="local:country"/>
            </ns0:country>
            <xsl:choose>
              <xsl:when test="local:floorAddress != &quot;&quot;">
                <ns0:streetAddress>
                  <xsl:value-of select="concat(local:floorAddress,&quot; &quot;,local:streetAddress)"/>
                </ns0:streetAddress>
              </xsl:when>
              <xsl:otherwise>
                <ns0:streetAddress>
                  <xsl:value-of select="local:streetAddress"/>
                </ns0:streetAddress>
              </xsl:otherwise>
            </xsl:choose>
            <ns0:addressType>
              <xsl:value-of select="local:csaddressType"/>
            </ns0:addressType>
            <xsl:choose>
              <xsl:when test="local:id = local:accountPrimaryAddressId">
                <ns0:isPrimaryAddress>
                  <xsl:text disable-output-escaping="no">true</xsl:text>
                </ns0:isPrimaryAddress>
              </xsl:when>
              <xsl:otherwise>
                <ns0:isPrimaryAddress>
                  <xsl:text disable-output-escaping="no">false</xsl:text>
                </ns0:isPrimaryAddress>
              </xsl:otherwise>
            </xsl:choose>
          </ns0:address>
        </xsl:for-each>
        <ns0:subscriberNumber>
          <xsl:value-of select="/local:accountEvent/local:account/local:subscriberNumber"/>
        </ns0:subscriberNumber>
        <ns0:subAccountNumber>
          <xsl:value-of select="/local:accountEvent/local:account/local:subAccountNumber"/>
        </ns0:subAccountNumber>
        <ns0:status>
          <xsl:value-of select="/local:accountEvent/local:account/local:accountStatus"/>
        </ns0:status>
        <ns0:site>
          <xsl:value-of select="/local:accountEvent/local:account/local:site"/>
        </ns0:site>
        <ns0:region>
          <xsl:value-of select="/local:accountEvent/local:account/local:region"/>
        </ns0:region>
        <ns0:subRegion>
          <xsl:value-of select="/local:accountEvent/local:account/local:subRegion"/>
        </ns0:subRegion>
        <ns0:subscriberCountryCode>
          <xsl:value-of select="/local:accountEvent/local:account/local:subscriberCountryCode"/>
        </ns0:subscriberCountryCode>
        <ns0:BusinessChannel>
          <xsl:value-of select="/local:accountEvent/local:account/local:businessChannel"/>
        </ns0:BusinessChannel>
        <ns0:FieldServiceLocation>
          <xsl:value-of select="/local:accountEvent/local:account/local:fieldServiceLocation"/>
        </ns0:FieldServiceLocation>
        <ns0:masterAccountClass>
          <xsl:value-of select="/local:accountEvent/local:account/local:AccountTypeCode"/>
        </ns0:masterAccountClass>
        <ns0:legalEntityFlag>
          <xsl:value-of select="/local:accountEvent/local:account/local:legalEntityFlag"/>
        </ns0:legalEntityFlag>
        <ns0:customerReferenceNumber>
          <xsl:value-of select="/local:accountEvent/local:account/local:customerReferenceNumber"/>
        </ns0:customerReferenceNumber>
      </ns0:account>
    </ns0:accountPubRequest>
  </xsl:template>
</xsl:stylesheet>
