<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="EAI.MSG.CS.ACM.235_PublishAccountContactEventRequest_Extended.xsd"/>
      <rootElement name="CSPublishAccountContactRequest" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CS/ACM/AccountContactPublishExtended"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="EAI.MSG.CS.ACM.229_AccountContactPublishRequest.xsd"/>
      <rootElement name="CSAccountContactRequest" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CS/ACM/AccountContactPublish"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [TUE FEB 16 12:31:44 GMT+05:30 2010]. -->
?>
<xsl:stylesheet version="1.0" xmlns:ns1="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CS/ACM/AccountContactPublishExtended" xmlns:gcap-cmt="http://www.reuters.com/ns/2007/09/01/GCAP/CommonMessageTypes" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:gcap-cut="http://www.reuters.com/ns/2007/09/01/GCAP/CommonUserTypes" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:xsdLocal="http://www.reuters.com/ns/2007/09/01/GCAP/EAI/CS/ACM/AccountContactPublish" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:gcap-NUT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableUserTypes" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:gcap-NAT="http://www.reuters.com/ns/2007/09/01/GCAP/NillableAccountTypes" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:gcap-sa="http://www.reuters.com/ns/2007/09/01/GCAP/SchemaAnnotations" xmlns:gcap-cat="http://www.reuters.com/ns/2007/09/01/GCAP/CommonAccountTypes" exclude-result-prefixes="xsl ns1 gcap-cmt gcap-cut xsd gcap-NUT gcap-NAT gcap-sa gcap-cat xsdLocal bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
  <xsl:template match="/">
    <xsdLocal:CSAccountContactRequest>
      <xsdLocal:eaiHeader>
        <gcap-cmt:applicationId>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:eaiHeader/gcap-cmt:applicationId"/>
        </gcap-cmt:applicationId>
        <gcap-cmt:transactionId>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:eaiHeader/gcap-cmt:transactionId"/>
        </gcap-cmt:transactionId>
        <gcap-cmt:messageId>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:eaiHeader/gcap-cmt:messageId"/>
        </gcap-cmt:messageId>
        <gcap-cmt:messageHistory>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:eaiHeader/gcap-cmt:messageHistory"/>
        </gcap-cmt:messageHistory>
        <gcap-cmt:tracingId>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:eaiHeader/gcap-cmt:tracingId"/>
        </gcap-cmt:tracingId>
        <gcap-cmt:timeStamp>
          <xsl:value-of select="xp20:current-dateTime()"/>
        </gcap-cmt:timeStamp>
        <gcap-cmt:instanceId>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:eaiHeader/gcap-cmt:instanceId"/>
        </gcap-cmt:instanceId>
        <gcap-cmt:timeToLive>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:eaiHeader/gcap-cmt:timeToLive"/>
        </gcap-cmt:timeToLive>
        <gcap-cmt:payloadVersion>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:eaiHeader/gcap-cmt:payloadVersion"/>
        </gcap-cmt:payloadVersion>
      </xsdLocal:eaiHeader>
      <xsdLocal:messageHeader>
        <gcap-cmt:messageId>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:messageHeader/gcap-cmt:messageId"/>
        </gcap-cmt:messageId>
        <gcap-cmt:transactionId>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:messageHeader/gcap-cmt:transactionId"/>
        </gcap-cmt:transactionId>
        <gcap-cmt:messageHistory>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:messageHeader/gcap-cmt:messageHistory"/>
        </gcap-cmt:messageHistory>
        <gcap-cmt:tracingId>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:messageHeader/gcap-cmt:tracingId"/>
        </gcap-cmt:tracingId>
        <gcap-cmt:messageCode>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:messageHeader/gcap-cmt:messageCode"/>
        </gcap-cmt:messageCode>
        <gcap-cmt:version>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:messageHeader/gcap-cmt:version"/>
        </gcap-cmt:version>
        <gcap-cmt:timeStamp>
          <xsl:value-of select="xp20:current-dateTime()"/>
        </gcap-cmt:timeStamp>
        <gcap-cmt:userId>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:messageHeader/gcap-cmt:userId"/>
        </gcap-cmt:userId>
        <gcap-cmt:objectSystem>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:messageHeader/gcap-cmt:objectSystem"/>
        </gcap-cmt:objectSystem>
      </xsdLocal:messageHeader>
      <!-- <xsl:choose>
        <xsl:when test='(/ns1:CSPublishAccountContactRequest/ns1:account/ns1:status = "Z") or (/ns1:CSPublishAccountContactRequest/ns1:address/ns1:status = "Z")'>
          <xsdLocal:country>
            <xsl:value-of select='substring(xref:lookupXRef("CRMAccountID_CSSubscriberNumber","CRMACCOUNTID",/ns1:CSPublishAccountContactRequest/ns1:AccountId,"CSSUBSCRIBERNUMBER",false()),11.0,2.0)'/>
          </xsdLocal:country>
        </xsl:when>
        <xsl:otherwise>-->
      <xsdLocal:country>
        <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CountryCodeCoreSuiteInstanceMap.dvm&quot;,&quot;SiebelCountry&quot;,/ns1:CSPublishAccountContactRequest/ns1:country,&quot;CSInstance&quot;,substring(/ns1:CSPublishAccountContactRequest/ns1:country,1.0,2.0))"/>
      </xsdLocal:country>
      <!--</xsl:otherwise>
      </xsl:choose>-->
      <xsdLocal:actionCode>
        <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:actionCode"/>
      </xsdLocal:actionCode>
      <xsdLocal:AccountId>
        <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:AccountId"/>
      </xsdLocal:AccountId>
      <xsdLocal:account>
        <!-- <xsl:choose>
          <xsl:when test='(/ns1:CSPublishAccountContactRequest/ns1:account/ns1:status = "Z") or (/ns1:CSPublishAccountContactRequest/ns1:address/ns1:status = "Z")'>
            <xsdLocal:subscriberNumber>
              <xsl:value-of select='substring(xref:lookupXRef("CRMAccountID_CSSubscriberNumber","CRMACCOUNTID",/ns1:CSPublishAccountContactRequest/ns1:AccountId,"CSSUBSCRIBERNUMBER",false()),1.0,7.0)'/>
            </xsdLocal:subscriberNumber>
          </xsl:when>
          <xsl:otherwise>-->
        <xsdLocal:subscriberNumber>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:subscriberNumber"/>
        </xsdLocal:subscriberNumber>
        <!--</xsl:otherwise>
        </xsl:choose>-->
        <xsdLocal:subscriberName>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:subscriberName"/>
        </xsdLocal:subscriberName>
        <xsdLocal:irasRef>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:irasRef"/>
        </xsdLocal:irasRef>
        <xsdLocal:subscriberType>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:subscriberType"/>
        </xsdLocal:subscriberType>
        <xsdLocal:subscriberRelation>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:subscriberRelation"/>
        </xsdLocal:subscriberRelation>
        <xsdLocal:ifaceInd>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:ifaceInd"/>
        </xsdLocal:ifaceInd>
        <xsdLocal:billingFrequency>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:billingFrequency"/>
        </xsdLocal:billingFrequency>
        <xsdLocal:businessCategory>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:businessCategory"/>
        </xsdLocal:businessCategory>
        <xsdLocal:businessArea>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:businessArea"/>
        </xsdLocal:businessArea>
        <xsdLocal:subFG1>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:subFG1"/>
        </xsdLocal:subFG1>
        <xsdLocal:subFG2>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:subFG2"/>
        </xsdLocal:subFG2>
        <xsdLocal:TaxCode>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:TaxCode"/>
        </xsdLocal:TaxCode>
        <xsdLocal:subscriberPayTerms>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:subscriberPayTerms"/>
        </xsdLocal:subscriberPayTerms>
        <xsdLocal:accountFamily>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:accountFamily"/>
        </xsdLocal:accountFamily>
        <xsdLocal:subMulticSubno>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:subMulticSubno"/>
        </xsdLocal:subMulticSubno>
        <xsdLocal:shortName>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:shortName"/>
        </xsdLocal:shortName>
        <xsdLocal:cityCode>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:cityCode"/>
        </xsdLocal:cityCode>
        <xsdLocal:dirName>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:dirName"/>
        </xsdLocal:dirName>
        <xsdLocal:enterpriseCode>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:enterpriseCode"/>
        </xsdLocal:enterpriseCode>
        <xsdLocal:VATNumber>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:VATNumber"/>
        </xsdLocal:VATNumber>
        <xsdLocal:billingSubscriberNumber>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:billingSubscriberNumber"/>
        </xsdLocal:billingSubscriberNumber>
        <xsdLocal:status>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:status"/>
        </xsdLocal:status>
        <xsdLocal:perClient>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:perClient"/>
        </xsdLocal:perClient>
        <xsdLocal:billingSuspensionRequired>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:billingSuspensionRequired"/>
        </xsdLocal:billingSuspensionRequired>
        <xsdLocal:invoicingSummary>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:invoicingSummary"/>
        </xsdLocal:invoicingSummary>
        <xsdLocal:CRHoldRequired>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:CRHoldRequired"/>
        </xsdLocal:CRHoldRequired>
        <xsdLocal:directDebitRequired>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:CountrySpecAttributes/ns1:directDebitRequired"/>
        </xsdLocal:directDebitRequired>
        <xsdLocal:exPostel>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:CountrySpecAttributes/ns1:exPostel"/>
        </xsdLocal:exPostel>
        <xsdLocal:taxOffice>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:CountrySpecAttributes/ns1:taxOffice"/>
        </xsdLocal:taxOffice>
        <xsdLocal:RIOIndicator>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:CountrySpecAttributes/ns1:RIOIndicator"/>
        </xsdLocal:RIOIndicator>
        <xsdLocal:contractType>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:contractType"/>
        </xsdLocal:contractType>
        <xsdLocal:globalSubNum>
          <xsl:value-of select="/ns1:CSPublishAccountContactRequest/ns1:account/ns1:globalSubNum"/>
        </xsdLocal:globalSubNum>
      </xsdLocal:account>
      <xsl:for-each select="/ns1:CSPublishAccountContactRequest/ns1:address">
        <xsl:if test="ns1:addressType = &quot;Installation&quot;">
          <xsdLocal:installAddress>
            <!--  <xsl:choose>
              <xsl:when test='(../ns1:account/ns1:status = "Z") or (ns1:status = "Z")'>
                <xsdLocal:subAccount>
                  <xsl:value-of select='substring(xref:lookupXRef("CRMAccountID_CSSubscriberNumber","CRMACCOUNTID",../ns1:AccountId,"CSSUBSCRIBERNUMBER",false()),8.0,3.0)'/>
                </xsdLocal:subAccount>
              </xsl:when>
              <xsl:otherwise>-->
            <xsdLocal:subAccount>
              <xsl:value-of select="ns1:subAccount"/>
            </xsdLocal:subAccount>
            <!--  </xsl:otherwise>
            </xsl:choose> -->
            <xsdLocal:name1>
              <xsl:value-of select="ns1:name1"/>
            </xsdLocal:name1>
            <xsdLocal:name2>
              <xsl:value-of select="ns1:name2"/>
            </xsdLocal:name2>
            <xsdLocal:addressType>
              <xsl:value-of select="ns1:addressType"/>
            </xsdLocal:addressType>
            <xsdLocal:building>
              <xsl:value-of select="substring(ns1:building,1.0,30.0)"/>
            </xsdLocal:building>
            <xsdLocal:street>
              <xsl:value-of select="substring(ns1:street,1.0,30.0)"/>
            </xsdLocal:street>
            <xsdLocal:city>
              <xsl:value-of select="substring(ns1:city,1.0,30.0)"/>
            </xsdLocal:city>
            <xsdLocal:state>
              <xsl:value-of select="substring(ns1:state,1.0,30.0)"/>
            </xsdLocal:state>
            <xsdLocal:country>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CSACM_AddressCountryMap.dvm&quot;,&quot;CRMCountry&quot;,ns1:country,&quot;CSCountry&quot;,xp20:upper-case(substring(ns1:country,1.0,2.0)))"/>
            </xsdLocal:country>
            <xsdLocal:zipCode>
              <xsl:value-of select="substring(ns1:zipCode,1.0,10.0)"/>
            </xsdLocal:zipCode>
            <xsdLocal:GeoCode>
              <xsl:value-of select="ns1:GeoCode"/>
            </xsdLocal:GeoCode>
            <xsdLocal:status>
              <xsl:value-of select="ns1:status"/>
            </xsdLocal:status>
            <xsdLocal:perClient>
              <xsl:value-of select="ns1:perClient"/>
            </xsdLocal:perClient>
            <xsdLocal:billingSuspensionRequired>
              <xsl:value-of select="ns1:billingSuspensionRequired"/>
            </xsdLocal:billingSuspensionRequired>
            <xsdLocal:accountDescription>
              <xsl:value-of select="substring(../ns1:account/ns1:accountDescription,1.0,60.0)"/>
            </xsdLocal:accountDescription>
            <xsdLocal:accountNotes>
              <xsl:value-of select="substring(../ns1:account/ns1:accountNotes,1.0,60.0)"/>
            </xsdLocal:accountNotes>
            <xsdLocal:customerReference>
              <xsl:value-of select="substring(../ns1:account/ns1:customerReference,1.0,12.0)"/>
            </xsdLocal:customerReference>
            <xsdLocal:RIPurchaseOrder>
              <xsl:value-of select="../ns1:CountrySpecAttributes/ns1:RIPurchaseOrder"/>
            </xsdLocal:RIPurchaseOrder>
            <xsdLocal:ERPurchaseOrder>
              <xsl:value-of select="../ns1:CountrySpecAttributes/ns1:ERPurchaseOrder"/>
            </xsdLocal:ERPurchaseOrder>
          </xsdLocal:installAddress>
        </xsl:if>
      </xsl:for-each>
      <xsl:for-each select="/ns1:CSPublishAccountContactRequest/ns1:address">
        <xsl:if test="ns1:addressType = &quot;Billing&quot;">
          <xsdLocal:billingAddress>
            <!--  <xsl:choose>
              <xsl:when test='(../ns1:account/ns1:status = "Z") or (ns1:status = "Z")'>
                <xsdLocal:subAccount>
                  <xsl:value-of select='substring(xref:lookupXRef("CRMAccountID_CSSubscriberNumber","CRMACCOUNTID",../ns1:AccountId,"CSSUBSCRIBERNUMBER",false()),8.0,3.0)'/>
                </xsdLocal:subAccount>
              </xsl:when>
              <xsl:otherwise>-->
            <xsdLocal:subAccount>
              <xsl:value-of select="ns1:subAccount"/>
            </xsdLocal:subAccount>
            <!--    </xsl:otherwise>
            </xsl:choose>-->
            <xsdLocal:name1>
              <xsl:value-of select="ns1:name1"/>
            </xsdLocal:name1>
            <xsdLocal:name2>
              <xsl:value-of select="ns1:name2"/>
            </xsdLocal:name2>
            <xsdLocal:addressType>
              <xsl:value-of select="ns1:addressType"/>
            </xsdLocal:addressType>
            <xsdLocal:building>
              <xsl:value-of select="substring(ns1:building,1.0,30.0)"/>
            </xsdLocal:building>
            <xsdLocal:street>
              <xsl:value-of select="substring(ns1:street,1.0,30.0)"/>
            </xsdLocal:street>
            <xsdLocal:city>
              <xsl:value-of select="substring(ns1:city,1.0,30.0)"/>
            </xsdLocal:city>
            <xsdLocal:state>
              <xsl:value-of select="substring(ns1:state,1.0,30.0)"/>
            </xsdLocal:state>
            <xsdLocal:country>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/EAIMetaData/dvm/CSACM_AddressCountryMap.dvm&quot;,&quot;CRMCountry&quot;,ns1:country,&quot;CSCountry&quot;,xp20:upper-case(substring(ns1:country,1.0,2.0)))"/>
            </xsdLocal:country>
            <xsdLocal:zipCode>
              <xsl:value-of select="substring(ns1:zipCode,1.0,10.0)"/>
            </xsdLocal:zipCode>
            <xsdLocal:GeoCode>
              <xsl:value-of select="ns1:GeoCode"/>
            </xsdLocal:GeoCode>
            <xsdLocal:status>
              <xsl:value-of select="ns1:status"/>
            </xsdLocal:status>
            <xsdLocal:perClient>
              <xsl:value-of select="ns1:perClient"/>
            </xsdLocal:perClient>
            <xsdLocal:billingSuspensionRequired>
              <xsl:value-of select="ns1:billingSuspensionRequired"/>
            </xsdLocal:billingSuspensionRequired>
            <xsdLocal:accountDescription>
              <xsl:value-of select="substring(../ns1:account/ns1:accountDescription,1.0,60.0)"/>
            </xsdLocal:accountDescription>
            <xsdLocal:accountNotes>
              <xsl:value-of select="substring(../ns1:account/ns1:accountNotes,1.0,60.0)"/>
            </xsdLocal:accountNotes>
            <xsdLocal:customerReference>
              <xsl:value-of select="substring(../ns1:account/ns1:customerReference,1.0,12.0)"/>
            </xsdLocal:customerReference>
            <xsdLocal:RIPurchaseOrder>
              <xsl:value-of select="../ns1:CountrySpecAttributes/ns1:RIPurchaseOrder"/>
            </xsdLocal:RIPurchaseOrder>
            <xsdLocal:ERPurchaseOrder>
              <xsl:value-of select="../ns1:CountrySpecAttributes/ns1:ERPurchaseOrder"/>
            </xsdLocal:ERPurchaseOrder>
          </xsdLocal:billingAddress>
        </xsl:if>
      </xsl:for-each>
      <xsl:for-each select="/ns1:CSPublishAccountContactRequest/ns1:employee">
        <xsdLocal:contact>
          <xsdLocal:contactId>
            <xsl:value-of select="ns1:contactId"/>
          </xsdLocal:contactId>
          <xsdLocal:personId>
            <xsl:value-of select="ns1:personId"/>
          </xsdLocal:personId>
          <xsdLocal:contactType>
            <xsl:value-of select="ns1:contactType"/>
          </xsdLocal:contactType>
          <xsdLocal:responsibilityCode>
            <xsl:value-of select="ns1:responsibilityCode"/>
          </xsdLocal:responsibilityCode>
          <xsdLocal:firstName>
            <xsl:value-of select="ns1:firstName"/>
          </xsdLocal:firstName>
          <xsdLocal:lastName>
            <xsl:value-of select="ns1:lastName"/>
          </xsdLocal:lastName>
          <xsdLocal:title>
            <xsl:value-of select="ns1:title"/>
          </xsdLocal:title>
          <xsdLocal:jobTitle>
            <xsl:value-of select="ns1:jobTitle"/>
          </xsdLocal:jobTitle>
          <xsdLocal:businessTelephoneNumber>
            <xsl:value-of select="ns1:businessTelephoneNumber"/>
          </xsdLocal:businessTelephoneNumber>
          <xsdLocal:homeTelephoneNumber>
            <xsl:value-of select="ns1:homeTelephoneNumber"/>
          </xsdLocal:homeTelephoneNumber>
        </xsdLocal:contact>
      </xsl:for-each>
    </xsdLocal:CSAccountContactRequest>
  </xsl:template>
</xsl:stylesheet>
