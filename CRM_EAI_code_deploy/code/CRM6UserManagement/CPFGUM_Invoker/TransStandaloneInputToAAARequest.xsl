<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="EAI.MSG.EXT.226_StandalonePropagateUserRequest.xsd"/>
      <rootElement name="standalonePropagateUserRequest" namespace="http://www.reuters.com/ns/2007/09/01/GCAP/external/CEP/UserManagementServices"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="EAI.SRV.EXT.002_PropagateUserService.wsdl"/>
      <rootElement name="propagateUserRequest" namespace="http://www.reuters.com/ns/2008/05/16/AAA/ESB/SBO/GCAP/UserManagementServices"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.3.0(build 100415.2045.2557) AT [WED MAR 14 14:50:27 GMT+05:30 2012]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:ns0="http://www.reuters.com/ns/2008/05/16/AAA/ESB/SBO/GCAP/CommonMessageTypes"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:ns4="http://www.reuters.com/ns/2008/05/16/AAA/ESB/SBO/GCAP/CommonAccountTypes"
                xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
                xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:local="http://www.reuters.com/ns/2007/09/01/GCAP/external/CEP/UserManagementServices"
                xmlns:ns10="http://www.reuters.com/ns/2008/05/16/AAA/ESB/SBO/GCAP/UserManagementServices"
                xmlns:bons0="http://www.reuters.com/ns/2007/11/20/GCAP/external/CEP/UserManagementResponse"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ns2="http://www.reuters.com/ns/2008/05/16/AAA/ESB/SBO/GCAP/CommonUserTypes"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:ns3="http://reuters.com/ns/2007/09/01/GCAP/CommonTypes"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:http="http://schemas.xmlsoap.org/wsdl/http/"
                xmlns:ns1="http://www.reuters.com/ns/2008/05/16/AAA/ESB/SBO/GCAP/SchemaAnnotations"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                exclude-result-prefixes="xsi xsl local xsd ns0 ns4 ns10 ns2 ns1 xp20 bpws bpel2 bpm ora socket mhdr orcl dvm hwf med ids xdk xref ldap">
  <xsl:template match="/">
    <ns10:propagateUserRequest>
      <ns10:eaiHeader>
        <ns0:applicationId>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:eaiHeader/local:applicationId"/>
        </ns0:applicationId>
        <ns0:transactionId>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:eaiHeader/local:transactionId"/>
        </ns0:transactionId>
        <ns0:messageId>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:eaiHeader/local:messageId"/>
        </ns0:messageId>
        <ns0:messageHistory>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:eaiHeader/local:messageHistory"/>
        </ns0:messageHistory>
        <ns0:tracingId>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:eaiHeader/local:tracingId"/>
        </ns0:tracingId>
        <xsl:choose>
          <xsl:when test="string-length(/local:standalonePropagateUserRequest/local:eaiHeader/local:timeStamp) > 0.0">
            <ns0:timeStamp>
              <xsl:value-of select="/local:standalonePropagateUserRequest/local:eaiHeader/local:timeStamp"/>
            </ns0:timeStamp>
          </xsl:when>
          <xsl:otherwise>
            <ns0:timeStamp>
              <xsl:value-of select="xp20:current-dateTime()"/>
            </ns0:timeStamp>
          </xsl:otherwise>
        </xsl:choose>
        <ns0:instanceId>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:eaiHeader/local:instanceId"/>
        </ns0:instanceId>
        <xsl:choose>
          <xsl:when test="string-length(/local:standalonePropagateUserRequest/local:eaiHeader/local:timeToLive) > 0.0">
            <ns0:timeToLive>
              <xsl:value-of select="/local:standalonePropagateUserRequest/local:eaiHeader/local:timeToLive"/>
            </ns0:timeToLive>
          </xsl:when>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test='/local:standalonePropagateUserRequest/local:eaiHeader/local:payloadVersion = ""'>
            <ns0:payloadVersion>
              <xsl:text disable-output-escaping="no">1</xsl:text>
            </ns0:payloadVersion>
          </xsl:when>
          <xsl:otherwise>
            <ns0:payloadVersion>
              <xsl:value-of select="/local:standalonePropagateUserRequest/local:eaiHeader/local:payloadVersion"/>
            </ns0:payloadVersion>
          </xsl:otherwise>
        </xsl:choose>
      </ns10:eaiHeader>
      <ns10:actionCode>
        <xsl:value-of select="/local:standalonePropagateUserRequest/local:actionCode"/>
      </ns10:actionCode>
      <ns10:userDetails>
        <ns2:UUID>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:UUID"/>
        </ns2:UUID>
        <xsl:if test='/local:standalonePropagateUserRequest/local:userDetails/local:primaryUUID != ""'>
          <ns2:primaryUUID>
            <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:primaryUUID"/>
          </ns2:primaryUUID>
        </xsl:if>
        <xsl:if test='/local:standalonePropagateUserRequest/local:userDetails/local:userType != ""'>
          <ns2:userType>
            <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:userType"/>
          </ns2:userType>
        </xsl:if>
        <xsl:if test="/local:standalonePropagateUserRequest/local:userDetails/local:extraInfo != &quot;&quot;">
           <!--ns2:extraInfo>
            <xsl:copy-of select="/local:standalonePropagateUserRequest/local:userDetails/local:extraInfo/child::node()"/> 
          </ns2:extraInfo-->
		
		<ns2:extraInfo>
  			<xsl:variable name="node">
            			<root>
              		<xsl:copy-of select="orcl:parseEscapedXML(/local:standalonePropagateUserRequest/local:userDetails/local:extraInfo/child::node())"/> 
            			</root>
 			</xsl:variable>
      				<xsl:copy-of select="$node"/>
		</ns2:extraInfo> 

          </xsl:if>
        <ns2:domain>
          <xsl:value-of select='dvm:lookupValue("oramds:/apps/EAIMetaData/dvm/CRMAppReference.dvm","Reference","CPFG_DOMAIN_ID","Value","")'/>
        </ns2:domain>
        <ns2:userID>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:userID"/>
        </ns2:userID>
        <ns2:title>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:title"/>
        </ns2:title>
        <ns2:firstName>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:firstName"/>
        </ns2:firstName>
        <ns2:lastName>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:lastName"/>
        </ns2:lastName>
        <ns2:phoneNumber>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:phoneNumber"/>
        </ns2:phoneNumber>
        <ns2:emailAddress>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:emailAddress"/>
        </ns2:emailAddress>
        <xsl:choose>
          <xsl:when test='/local:standalonePropagateUserRequest/local:userDetails/local:legalConsentGiven != ""'>
            <ns2:legalConsentGiven>
              <xsl:value-of select='dvm:lookupValue("oramds:/apps/EAIMetaData/dvm/CCRM_UpdateSiebelServiceMarketingConsentMap.dvm","SIEBEL",/local:standalonePropagateUserRequest/local:userDetails/local:legalConsentGiven,"LEGALCONSENT",/local:standalonePropagateUserRequest/local:userDetails/local:legalConsentGiven)'/>
            </ns2:legalConsentGiven>
          </xsl:when>
          <xsl:otherwise>
            <ns2:legalConsentGiven>
              <xsl:text disable-output-escaping="no">false</xsl:text>
            </ns2:legalConsentGiven>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test='/local:standalonePropagateUserRequest/local:userDetails/local:legalConsentGivenOn != ""'>
            <ns2:legalConsentGivenOn>
              <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:legalConsentGivenOn"/>
            </ns2:legalConsentGivenOn>
          </xsl:when>
          <xsl:otherwise>
            <ns2:legalConsentGivenOn>
              <xsl:value-of select="xp20:current-dateTime()"/>
            </ns2:legalConsentGivenOn>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test='/local:standalonePropagateUserRequest/local:userDetails/local:marketingConsentGiven != ""'>
            <ns2:marketingConsentGiven>
              <xsl:value-of select='dvm:lookupValue("oramds:/apps/EAIMetaData/dvm/CCRM_UpdateSiebelServiceMarketingConsentMap.dvm","SIEBEL",/local:standalonePropagateUserRequest/local:userDetails/local:marketingConsentGiven,"MARKETCONSENT",/local:standalonePropagateUserRequest/local:userDetails/local:marketingConsentGiven)'/>
            </ns2:marketingConsentGiven>
          </xsl:when>
          <xsl:otherwise>
            <ns2:marketingConsentGiven>
              <xsl:text disable-output-escaping="no">true</xsl:text>
            </ns2:marketingConsentGiven>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test='/local:standalonePropagateUserRequest/local:userDetails/local:marketingConsentGivenOn != ""'>
            <ns2:marketingConsentGivenOn>
              <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:marketingConsentGivenOn"/>
            </ns2:marketingConsentGivenOn>
          </xsl:when>
          <xsl:otherwise>
            <ns2:marketingConsentGivenOn>
              <xsl:value-of select="xp20:current-dateTime()"/>
            </ns2:marketingConsentGivenOn>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:if test="string-length(/local:standalonePropagateUserRequest/local:userDetails/local:jobRole) > 0.0">
          <ns2:jobRole>
            <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:jobRole"/>
          </ns2:jobRole>
        </xsl:if>
        <xsl:choose>
          <xsl:when test='/local:standalonePropagateUserRequest/local:userDetails/local:FTLCompleted != ""'>
            <ns2:FTLCompleted>
              <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:FTLCompleted"/>
            </ns2:FTLCompleted>
          </xsl:when>
          <xsl:otherwise>
            <ns2:FTLCompleted>
              <xsl:text disable-output-escaping="no">false</xsl:text>
            </ns2:FTLCompleted>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test='/local:standalonePropagateUserRequest/local:userDetails/local:FTLCompletedOn != ""'>
            <ns2:FTLCompletedOn>
              <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:FTLCompletedOn"/>
            </ns2:FTLCompletedOn>
          </xsl:when>
          <xsl:otherwise>
            <ns2:FTLCompletedOn>
              <xsl:value-of select="xp20:current-dateTime()"/>
            </ns2:FTLCompletedOn>
          </xsl:otherwise>
        </xsl:choose>
        <ns2:localFirstName>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:localFirstName"/>
        </ns2:localFirstName>
        <ns2:localLastName>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:localLastName"/>
        </ns2:localLastName>
        <ns2:preferredServiceLanguage>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:preferredServiceLanguage"/>
        </ns2:preferredServiceLanguage>
        <ns2:reutersMessagingId>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:reutersMessagingId"/>
        </ns2:reutersMessagingId>
        <ns2:localDACSID>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:localDACSID"/>
        </ns2:localDACSID>
        <ns2:geographicalFocus>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:geographicalFocus"/>
        </ns2:geographicalFocus>
        <xsl:choose>
          <xsl:when test='/local:standalonePropagateUserRequest/local:userDetails/local:lastUpdatedByAAAOn != ""'>
            <ns2:lastUpdatedByAAAOn>
              <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:lastUpdatedByAAAOn"/>
            </ns2:lastUpdatedByAAAOn>
          </xsl:when>
          <xsl:otherwise>
            <ns2:lastUpdatedByAAAOn>
              <xsl:value-of select="xp20:current-dateTime()"/>
            </ns2:lastUpdatedByAAAOn>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test='/local:standalonePropagateUserRequest/local:userDetails/local:lastUpdatedSiebelOn != ""'>
            <ns2:lastUpdatedSiebelOn>
              <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:lastUpdatedSiebelOn"/>
            </ns2:lastUpdatedSiebelOn>
          </xsl:when>
          <xsl:otherwise>
            <ns2:lastUpdatedSiebelOn>
              <xsl:value-of select="xp20:current-dateTime()"/>
            </ns2:lastUpdatedSiebelOn>
          </xsl:otherwise>
        </xsl:choose>
        <ns2:locationAccountID>
          <xsl:value-of select="/local:standalonePropagateUserRequest/local:userDetails/local:locationAccountID"/>
        </ns2:locationAccountID>
      </ns10:userDetails>
    </ns10:propagateUserRequest>
  </xsl:template>
</xsl:stylesheet>
